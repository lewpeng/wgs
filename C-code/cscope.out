cscope 15 $HOME/Git/wgs/C-code               0000079792
	@ADI.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<°dlib.h
>

12 
	$maö
()

17 
	}
}

	@C-Point/point.c

23 
	~<°dio.h
>

25 
	$gg
(
n
){

26 
	`¥ötf
("%d\n", 
n
);

27  
n
 - 1;

28 
	}
}

29 
	$maö
()

31 
a
;

32 *
b
;

33 **
c
;

35 
dd
[10];

36 *
e
[10];

37 (*
f
)[10];

39 (*
g
)();

40 (*
h
[10])();

42 
a
 = 100;

43 
b
 = &
a
;

44 
c
 = &
b
;

45 
	`¥ötf
("%d %d %d\n", 
a
, *
b
, **
c
);

47 
d
[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

48 
f
 = 
d
;

49 
i
;

50 
i
 = 0; i < 10; i++){

51 
e
[
i
] = &
d
[i];

52 
	`¥ötf
("%d ", 
d
[
i
]);

53 
	`¥ötf
("%d ", (*
f
)[
i
]);

54 
	`¥ötf
("%d ", *
e
[
i
]);

56 
	`¥ötf
("\n");

58 
g
 = 
gg
;

59 
	`¥ötf
("%d\n", 
	`g
(1001));

60 
h
[1] = 
gg
;

61 
	`¥ötf
("%d\n", 
h
[1](111));

64 
	}
}

	@C/10.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
a
, 
b
, 
c
, 
d
;

13 
	`sˇnf
("%d %d %d", &
a
,&
b
,&
c
);

14 if(
a
 > 
b
)

16 
d
 = 
a
;

17 
a
 = 
b
;

18 
b
 = 
d
;

20 if(
a
 > 
c
)

22 
d
 = 
a
;

23 
a
 = 
c
;

24 
c
 = 
d
;

26 if(
b
 > 
c
)

28 
d
 = 
b
;

29 
b
 = 
c
;

30 
c
 = 
d
;

32 
	`¥ötf
("%d,%d,%d\n",
a
,
b
,
c
);

34 
	}
}

	@C/1001.c

1 
	~<°dio.h
>

2 
	~<m©h.h
>

4 
	$maö
()

6 
n
 = 3, 
a
[3];

7 
s
;

17 
	`sˇnf
();

19 
i
 = 
n
-1; i < 0; i--)

21 
s
 = 
	`sqπ
(()
a
[
i
]);

22 
	`¥ötf
("†%‡",
s
);

25 
	}
}

	@C/13.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
a
,
b
,
c
,
d
,
e
;

13 
s
 = 1;

15 
	`sˇnf
("%d%d",&
a
,&
b
);

16 
i
 = 1; i <
b
; i++)

18 
s
 = s * 
a
;

20 
s
 = s % 1000;

21 
c
 = 
s
 / 100;

22 
d
 = (
s
 - (
c
 * 100)) / 10;

23 
e
 = 
s
 - 
c
 * 100 - 
d
 * 10;

24 
	`¥ötf
("%d %d %d\n",
c
,
d
,
e
);

27 
	}
}

	@C/14.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
a
, 
b
, 
c
;

13 
m
[12];

14 
s
 = 0;

16 
	`¥ötf
("ËæìÂÖ•Âπ¥ÊúàÊó•ÔºåÁî®Á©∫Ê†ºÈöîÂºÄ\n");

17 
	`sˇnf
("%d%d%d",&
a
, &
b
, &
c
);

19 i‡(
a
 % 4 == 0 &&á % 100 != 0 ||á % 400 == 0)

21 
m
[] = {31,29,31,30,31,30,31,31,30,31,30,31};

25 
m
[12] = {31,28,31,30,31,30,31,31,30,31,30,31};

28 
i
 = 0; i < 
b
 - 1; i++)

29 
s
 = s + 
m
[
i
];

30 
s
 = s + 
c
;

31 
	`¥ötf
("ËøôÊòØËøô‰∏ÄÂπ¥ÁöÑÁ¨¨%dÂ§©\n", 
s
);

33 
	}
}

	@C/15.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
a
, 
b
, 
c
;

13 
a
 = 1;á < 3;á++)

14 
b
= 1; b< 3; b++)

15 
c
 = 1; c < 3; c++)

17 i‡(
a
 !1 && 
c
 !1 && c !3 &&á !
b
 && b != c &&á != c)

21 
	`¥ötf
("a‰∏é%cÁªìÂ©ö\n"Ôºå'x'+
a
-1);

22 
	`¥ötf
("b‰∏é%cÁªìÂ©ö\n"Ôºå'x'+
b
-1);

23 
	`¥ötf
("c‰∏é%cÁªìÂ©ö\n"Ôºå'x'+
c
-1);

27 
	}
}

	@C/166.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	$sw≠
(*
p
, *
q
)

12 
ãmp
;

13 
ãmp
 = *
p
;

14 *
p
 = *
q
;

15 *
q
 = 
ãmp
;

16 
	}
}

18 
	$exch™ge
(*
x
, *
y
, *
z
)

20 i‡(*
x
 > *
y
)

21 
	`sw≠
(
x
, 
y
);

22 i‡(*
x
 > *
z
)

23 
	`sw≠
(
x
, 
z
);

24 i‡(*
y
 > *
z
)

25 
	`sw≠
(
y
, 
z
);

26 
	}
}

28 
	$maö
()

30 
a
, 
b
, 
c
, *
q1
, *
q2
, *
q3
;

31 
	`¥ötf
("inputÅhreeÇumber: ");

32 
	`sˇnf
("%d %d %d", &
a
, &
b
, &
c
);

33 
q1
 = &
a
;

34 
q2
 = &
b
;

35 
q3
 = &
c
;

36 
	`exch™ge
(
q1
, 
q2
, 
q3
);

37 
	`¥ötf
("\¿%d, %d, %d\n", 
a
, 
b
, 
c
);

40 
	}
}

	@C/167.c

8 
	~<°dio.h
>

10 
	s°udít
 {

11 
	mnum
;

12 
	m«me
[20];

13 
	m£x
;

14 
	mage
;

15 
	msc‹e
;

18 
	$maö
()

20 
°udít
 
°udít1
 = {1, "wugaosheng", 'M', 25, 100};

21 
°udít
 *
p
;

22 
p
 = &
°udít1
;

23 
	`¥ötf
("num = %d\n", 
p
->
num
);

24 
	`¥ötf
("«mê%s\n", 
p
->
«me
);

25 
	`¥ötf
("£x = %c\n", 
p
->
£x
);

26 
	`¥ötf
("agê%d\n", 
p
->
age
);

27 
	`¥ötf
("sc‹ê%0.1f\n", 
p
->
sc‹e
);

29 
	}
}

	@C/168.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
	`¥ötf
("input 5Çumbers\n");

13 
a
[5];

14 *
p
;

16 
i
 = 0; i < 5; i++)

17 
	`sˇnf
("%d ",&
a
[
i
]);

18 
	`¥ötf
("\n");

20 
p
 = 
a
;

21 
i
 = 0; i < 5; i++)

22 
	`¥ötf
("a[%d] = %d ", 
i
, *
p
++);

25 
	}
}

	@C/169.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
i
, *
mö
, *
max
;

13 
a
[5] = {1,2,3,4,5};

14 
mö
 = 
max
 = 
a
;

16 
i
 = 1; i < 5; i++)

18 i‡(*
mö
 > 
a
[
i
])

19 
mö
 = &
a
[
i
];

21 i‡(*
max
 < 
a
[
i
])

22 
max
 = &
a
[
i
];

25 
	`¥ötf
("thêmö = %d\n", *
mö
);

26 
	`¥ötf
("thêmax = %d\n", *
max
);

28 
	}
}

	@C/170.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	$maö
()

12 *
°rög
[] = {"usa", "china", "jpan", "uk"};

14 **
p
;

15 
i
;

16 
p
 = 
°rög
;

18 
i
 = 0; i < 4; i++)

20 
	`¥ötf
("%s\n, %s\n", *(
p
++), *
°rög
[
i
]);

22 
	`¥ötf
("\n");

25 
	}
}

	@C/171.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

11 
	$s‹t
 (*
°rög
[], 
n
)

13 *
p
;

14 
i
,
j
;

16 
i
 = 0; i < 
n
; i++ )

18 
j
 = 
i
 + 1; j < 
n
; j++)

20 i‡(
	`°rcmp
(
°rög
[
i
], såög[
j
]) > 0)

22 
p
 = 
°rög
[
j
];

23 
°rög
[
j
] = såög[
i
];

24 
°rög
[
i
]
p
;

31 
	}
}

33 
	$maö
()

35 
k
;

36 **
q
;

37 *
°rög
[5] = {"china", "usa", "atr", "ssh", "wsd"};

38 
q
 = 
°rög
;

39 
	`s‹t
(
q
, 5);

40 
k
 = 0; k < 5; k++)

42 
	`¥ötf
("%†", 
°rög
[
k
]);

44 
	`¥ötf
("\n");

47 
	}
}

	@C/172.2.c

8 
	~<°dio.h
>

10 *
	$FödMax
(*
p
, 
n
)

12 
i
, *
max
;

13 
max
 = 
p
;

14 
i
 = 0; i < 
n
; i++)

16 i‡(*(
p
 + 
i
Ë> *
max
)

17 
max
 = 
p
 + 
i
;

19  
max
;

20 
	}
}

21 
	$maö
()

23 *
max
;

24 
a
[5] = {1,2,3,4,5};

26 
max
 = 
	`FödMax
(
a
, 5);

27 
	`¥ötf
("max = %d\n", *
max
);

30 
	}
}

	@C/172.c

8 
	~<°dio.h
>

11 
	$FödMax
(
b
[],
n
)

13 
i
, *
q
;

14 
q
 = 
b
;

15 
i
 = 0; i < 
n
; i++)

17 i‡(*
q
 < 
b
[
i
])

18 
q
 = &
b
[
i
];

21  *
q
;

23 
	}
}

25 
	$maö
()

27 
max
, *
p
, 
n
;

28 
a
[5] = {1, 2, 3, 4, 5};

30 
n
 = (
a
) / (a[0]);

31 
p
 = 
a
;

32 
max
 = 
	`FödMax
(
p
,
n
);

33 
	`¥ötf
("max = %d\n", 
max
);

35 
	}
}

	@C/173.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	$c⁄√˘i⁄
(*
s
, *
t
, *
q
)

12 
i
 = 0;

13 ; *
s
 != '\0';)

15 *
q
 = *
s
;

16 
s
++;

17 
q
++;

20 ;*
t
 != '\0';)

22 *
q
 = *
t
;

23 
t
++;

24 
q
++;

26 *
q
 = '\0';

27 
	}
}

29 
	$maö
()

31 
Á
[60], *
p
;

32 
°r
[] = {"one world"};

33 
t
[] = {"one dream"};

34 
p
 = 
Á
;

35 
	`c⁄√˘
(
°r
, 
t
, 
p
);

36 
	`¥ötf
("%s\n", 
p
);

38 
	}
}

	@C/18.c

8 
	~<°dio.h
>

10 
	$∑ixu
(
a
, 
b
, 
c
)

12 
d
;

14 if(
a
 > 
b
)

16 
d
 = 
a
;

17 
a
 = 
b
;

18 
b
 = 
d
;

20 if(
a
 > 
c
)

22 
d
 = 
a
;

23 
a
 = 
c
;

24 
c
 = 
d
;

26 if(
b
 > 
c
)

28 
d
 = 
b
;

29 
b
 = 
c
;

30 
c
 = 
d
;

32 
	}
}

34 
	$maö
()

36 
a
, 
b
, 
c
, 
s
;

38 
	`¥ötf
("ËæìÂÖ•‰∏âÊù°ËæπÁöÑÈïøÂ∫¶Ôºö\n");

39 
	`sˇnf
("%d %d %d",&
a
,&
b
,&
c
);

41 
	`∑ixu
(
a
, 
b
, 
c
);

43 i‡(
a
 + 
b
 > 
c
 && c -á < b)

45 i‡(
a
 =
c
 && 
b
 == c)

47 
	`¥ötf
("ÊûÑÊàêÁ≠âËæπ‰∏âËßíÂΩ¢\n");

49 i‡(
a
 !
b
 =
c
 ||á == b != c)

51 
	`¥ötf
("ÊûÑÊàêÁ≠âËæπ‰∏âËßíÂΩ¢\n");

53 i‡–
a
 *á + 
b
 * b =
c
 * c)

55 
	`¥ötf
("ÊûÑÊàêÁõ¥Ëßí‰∏âËßíÂΩ¢\n");

59 
	`¥ötf
("Ëøô‰∏â‰∏™Êï∞Êó†Ê≥ïÊûÑÊàê‰∏âËßíÂΩ¢\n");

62 
	`¥ötf
("®%d, b = %d, c = %d\n",
a
, 
b
, 
c
);

65 
	}
}

	@C/20.c

8 
	~<°dio.h
>

10 
	$shs‹t
(
s
[], 
n
)

12 
i
, 
j
, 
d
;

13 
d
 = 
n
 / 2;

14 
d
 >= 1)

16 
i
 = 
d
 + 1; i <
n
; i++)

18 
s
[0] = s[
i
];

19 
j
 = 
i
 -
d
;

20 (
j
 > 0Ë&& (
s
[0] < s[j]))

22 
s
[
j
 + 
d
] = s[j];

23 
j
 = j - 
d
;

25 
s
[
j
 + 
d
] = s[0];

27 
d
 = d / 2;

29 
	}
}

31 
	$maö
()

33 
i
, 
a
[11];

34 
	`¥ötf
("ËØ∑ËæìÂÖ•10‰∏™Êï∞ÊçÆÔºö\n");

35 
i
 = 1; i <= 10; i++)

36 
	`sˇnf
("%d",&
a
[
i
]);

37 
	`shs‹t
(
a
, 10);

38 
	`¥ötf
("ÊéíÂ∫èÂêéÁöÑÈ°∫Â∫èÊòØÔºö\n");

39 
i
 = 1; i <= 10; i++)

40 
	`¥ötf
("%5d",
a
[
i
]);

41 
	`¥ötf
("\n");

43 
	}
}

	@C/9.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
s
 = 1;

13 
i
 = 1; i <= 10; i++)

15 
s
 = s * 
i
;

17 
	`¥ötf
("10! = %.2f\n",
s
);

19 
	}
}

	@C/C++/biggest-huiwen.cpp

1 
	~<io°ªam
>

2 
	~<°rög
>

3 
usög
 
«me•a˚
 
	g°d
;

5 
°rög
 
	$ex∑ndAroundCíãr
(
°rög
 
s
, 
c1
, 
c2
) {

6 
l
 = 
c1
, 
r
 = 
c2
;

7 
n
 = 
s
.
	`Àngth
();

9 
l
 >0 && 
r
 <
n
-1 && 
s
[l] == s[r]) {

10 
l
--;

11 
r
++;

13  
s
.
	`sub°r
(
l
+1, 
r
-l-1);

14 
	}
}

16 
°rög
 
	$l⁄ge°PÆödromeSim∂e
(
°rög
 
s
) {

18 
n
 = 
s
.
	`Àngth
();

20 i‡(
n
 == 0)  "" ;

22 
°rög
 
l⁄ge°
 = 
s
.
	`sub°r
(0, 1);

24  
i
 = 0; i < 
n
-1; i++) {

25 
°rög
 
p1
 = 
	`ex∑ndAroundCíãr
(
s
, 
i
, i);

27 i‡(
p1
.
	`Àngth
(Ë> 
l⁄ge°
.length())

28 
l⁄ge°
 = 
p1
;

30 
°rög
 
p2
 = 
	`ex∑ndAroundCíãr
(
s
, 
i
, i+1);

32 i‡(
p2
.
	`Àngth
(Ë> 
l⁄ge°
.length())

33 
l⁄ge°
 = 
p2
;

35  
l⁄ge°
;

36 
	}
}

38 
	$maö
()

40 
°rög
 
°r
;

41 
cö
 >> 
°r
){

42 
cout
 << 
	`l⁄ge°PÆödromeSim∂e
(
°r
Ë<< 
ídl
;

46 
	}
}

	@C/C++/jinzhi.cpp

6 
	~<io°ªam
>

7 
usög
 
«me•a˚
 
	g°d
;

8 
	$maö
()

10 
num
;

11 
cö
 >> 
num
){

12 
cout
 << "ÂçÅËøõÂà∂Ôºö" << 
num
 << 
ídl
;

13 
cout
 << "ÂÖ´ËøõÂà∂Ôºö" << 
o˘
 << 
num
 << 
ídl
;

14 
cout
 << "ÂçÅÂÖ≠ËøõÂà∂Ôºö" << 
hex
 << 
num
 << 
ídl
;

18 
	}
}

	@C/C++/ten-to-any.cpp

8 
	~<io°ªam
>

9 
usög
 
«me•a˚
 
	g°d
;

11 
	$maö
()

13 
n
;

14 
p
, 
c
, 
m
 = 0, 
s
[100];

15 
cout
 << "∂ó£ i≈uà®nummbî which you w™àå™¶©e: " << 
ídl
;

16 
cö
 >> 
n
;

17 
cout
 << "∂ó£ i≈uàËøõÂà∂: " << 
ídl
;

18 
cö
 >> 
p
;

20 
cout
 << "(" << 
n
 << ")10 = " << "(";

22 
n
 != 0){

23 
c
 = 
n
 % 
p
;

24 
n
 =Ç / 
p
;

25 
s
[
m
++] = 
c
;

27 
k
 = 
m
; k >= 0; k--){

28 if(
s
[
k
] >= 10)

29 
cout
 << ()(
s
[
k
] + 55);

31 
cout
 << 
s
[
k
];

33 
cout
 << ")" << 
p
 << 
ídl
;

36 
	}
}

	@C/C++/ten-to-two.cpp

6 
	~<io°ªam
>

7 
usög
 
«me•a˚
 
	g°d
;

9 
	$¥ötbö¨y
(c⁄° 
vÆ
)

11 
i
 = 16; i >= 0; i--){

12 i‡(
vÆ
 & (1 << 
i
))

13 
cout
 << "1";

15 
cout
 << "0";

17 
	}
}

18 
	$maö
()

20 
	`¥ötbö¨y
(1024);

22 
	}
}

	@C/Double-linklist/DList.c

1 
	~"DLi°.h
"

2 
	~<mÆloc.h
>

3 
	~<°dlib.h
>

5 
Posôi⁄
 
	$MakeNode
(
Iãm
 
i
)

7 
PNode
 
p
 = 
NULL
;

8 
p
 = (
PNode
)
	`mÆloc
((
Node
));

9 if(
p
!=
NULL
)

11 
p
->
d©a
 = 
i
;

12 
p
->
¥evious
 = 
NULL
;

13 
p
->
√xt
 = 
NULL
;

15  
p
;

16 
	}
}

18 
	$FªeNode
(
PNode
 
p
)

20 
	`‰ì
(
p
);

21 
	}
}

23 
DLi°
 * 
	$InôLi°
()

25 
DLi°
 *
∂i°
 = (DLi° *)
	`mÆloc
((DList));

26 
PNode
 
hód
 = 
	`MakeNode
(0);

27 if(
∂i°
!=
NULL
)

29 if(
hód
!=
NULL
)

31 
∂i°
->
hód
 = head;

32 
∂i°
->
èû
 = 
hód
;

33 
∂i°
->
size
 = 0;

36  
NULL
;

38  
∂i°
;

39 
	}
}

42 
	$De°royLi°
(
DLi°
 *
∂i°
)

44 
	`CÀ¨Li°
(
∂i°
);

45 
	`‰ì
(
	`GëHód
(
∂i°
));

46 
	`‰ì
(
∂i°
);

47 
	}
}

50 
	$IsEm±y
(
DLi°
 *
∂i°
)

52 if(
	`GëSize
(
∂i°
)==0&&
	`GëTaû
’li°)==
	`GëHód
(plist))

56 
	}
}

58 
	$CÀ¨Li°
(
DLi°
 *
∂i°
)

60 
PNode
 
ãmp
,
p
;

61 
p
 = 
	`GëTaû
(
∂i°
);

62 !
	`IsEm±y
(
∂i°
))

64 
ãmp
 = 
	`GëPªvious
(
p
);

65 
	`FªeNode
(
p
);

66 
p
 = 
ãmp
;

67 
∂i°
->
èû
 = 
ãmp
;

68 
∂i°
->
size
--;

70 
	}
}

73 
Posôi⁄
 
	$GëHód
(
DLi°
 *
∂i°
)

75  
∂i°
->
hód
;

76 
	}
}

79 
Posôi⁄
 
	$GëTaû
(
DLi°
 *
∂i°
)

81  
∂i°
->
èû
;

82 
	}
}

85 
	$GëSize
(
DLi°
 *
∂i°
)

87  
∂i°
->
size
;

88 
	}
}

91 
Posôi⁄
 
	$GëNext
(
Posôi⁄
 
p
)

93  
p
->
√xt
;

94 
	}
}

97 
Posôi⁄
 
	$GëPªvious
(
Posôi⁄
 
p
)

99  
p
->
¥evious
;

100 
	}
}

103 
PNode
 
	$InsFú°
(
DLi°
 *
∂i°
,
PNode
 
≤ode
)

105 
Posôi⁄
 
hód
 = 
	`GëHód
(
∂i°
);

107 if(
	`IsEm±y
(
∂i°
))

108 
∂i°
->
èû
 = 
≤ode
;

109 
∂i°
->
size
++;

111 
≤ode
->
√xt
 = 
hód
->next;

112 
≤ode
->
¥evious
 = 
hód
;

114 if(
hód
->
√xt
!=
NULL
)

115 
hód
->
√xt
->
¥evious
 = 
≤ode
;

116 
hód
->
√xt
 = 
≤ode
;

118  
≤ode
;

119 
	}
}

122 
PNode
 
	$DñFú°
(
DLi°
 *
∂i°
)

124 
Posôi⁄
 
hód
 = 
	`GëHód
(
∂i°
);

125 
Posôi⁄
 
p
=
hód
->
√xt
;

126 if(
p
!=
NULL
)

128 if(
p
==
	`GëTaû
(
∂i°
))

129 
∂i°
->
èû
 = 
p
->
¥evious
;

130 
hód
->
√xt
 = 
p
->next;

131 
hód
->
√xt
->
¥evious
 = head;

132 
∂i°
->
size
--;

135  
p
;

136 
	}
}

139 
Iãm
 
	$GëIãm
(
Posôi⁄
 
p
)

141  
p
->
d©a
;

142 
	}
}

145 
	$SëIãm
(
Posôi⁄
 
p
,
Iãm
 
i
)

147 
p
->
d©a
 = 
i
;

148 
	}
}

151 
PNode
 
	$Remove
(
DLi°
 *
∂i°
)

153 
Posôi⁄
 
p
=
NULL
;

154 if(
	`IsEm±y
(
∂i°
))

155  
NULL
;

158 
p
 = 
	`GëTaû
(
∂i°
);

159 
p
->
¥evious
->
√xt
 =Ö->next;

160 
∂i°
->
èû
 = 
p
->
¥evious
;

161 
∂i°
->
size
--;

162  
p
;

164 
	}
}

166 
PNode
 
	$InsBef‹e
(
DLi°
 *
∂i°
,
Posôi⁄
 
p
,
PNode
 
s
)

168 
s
->
¥evious
 = 
p
->previous;

169 
s
->
√xt
 = 
p
;

170 
p
->
¥evious
->
√xt
 = 
s
;

171 
p
->
¥evious
 = 
s
;

173 
∂i°
->
size
++;

174  
s
;

175 
	}
}

177 
PNode
 
	$InsA·î
(
DLi°
 *
∂i°
,
Posôi⁄
 
p
,
PNode
 
s
)

179 
s
->
√xt
 = 
p
->next;

180 
s
->
¥evious
 = 
p
;

182 if(
p
->
√xt
 !
NULL
)

183 
p
->
√xt
->
¥evious
 = 
s
;

184 
p
->
√xt
 = 
s
;

186 if(
p
 = 
	`GëTaû
(
∂i°
))

187 
∂i°
->
èû
 = 
s
;

189 
∂i°
->
size
++;

190  
s
;

191 
	}
}

194 
PNode
 
	$LoˇãPos
(
DLi°
 *
∂i°
,
i
)

196 
˙t
 = 0;

197 
Posôi⁄
 
p
 = 
	`GëHód
(
∂i°
);

198 if(
i
>
	`GëSize
(
∂i°
)||i<1)

199  
NULL
;

201 ++
˙t
<=
i
)

203 
p
ı->
√xt
;

206  
p
;

207 
	}
}

210 
Li°Tøvî£
(
DLi°
 *
∂i°
,(*
visô
)())

212 
Posôi⁄
 
p
 = 
	`GëHód
(
∂i°
);

213 if(
	`IsEm±y
(
∂i°
))

214 
	`exô
(0);

218 
p
->
√xt
!=
NULL
)

220 
p
 =Ö->
√xt
;

221 
	`visô
(
p
->
d©a
);

224 
	}
}

	@C/Double-linklist/DList.h

1 #i‚de‡
DLi°_H


2 
	#DLi°_H


	)

3 
	tIãm
;

4 
Node
 * 
	tPNode
;

5 
PNode
 
	tPosôi⁄
;

7 
	sNode


9 
Iãm
 
	md©a
;

10 
PNode
 
	m¥evious
;

11 
PNode
 
	m√xt
;

12 }
	tNode
;

16 
PNode
 
	mhód
;

17 
PNode
 
	mèû
;

18 
	msize
;

19 }
	tDLi°
;

22 
Posôi⁄
 
MakeNode
(
Iãm
 
i
);

25 
FªeNode
(
PNode
 
p
);

28 
DLi°
* 
InôLi°
();

31 
De°royLi°
(
DLi°
 *
∂i°
);

34 
CÀ¨Li°
(
DLi°
 *
∂i°
);

37 
Posôi⁄
 
GëHód
(
DLi°
 *
∂i°
);

40 
Posôi⁄
 
GëTaû
(
DLi°
 *
∂i°
);

43 
GëSize
(
DLi°
 *
∂i°
);

46 
Posôi⁄
 
GëNext
(Posôi⁄ 
p
);

49 
Posôi⁄
 
GëPªvious
(Posôi⁄ 
p
);

52 
PNode
 
InsFú°
(
DLi°
 *
∂i°
,PNodê
≤ode
);

55 
PNode
 
DñFú°
(
DLi°
 *
∂i°
);

58 
Iãm
 
GëIãm
(
Posôi⁄
 
p
);

61 
SëIãm
(
Posôi⁄
 
p
,
Iãm
 
i
);

64 
PNode
 
Remove
(
DLi°
 *
∂i°
);

67 
PNode
 
InsBef‹e
(
DLi°
 *
∂i°
,
Posôi⁄
 
p
,PNodê
s
);

70 
PNode
 
InsA·î
(
DLi°
 *
∂i°
,
Posôi⁄
 
p
,PNodê
s
);

73 
PNode
 
LoˇãPos
(
DLi°
 *
∂i°
,
i
);

76 
Li°Tøvî£
(
DLi°
 *
∂i°
,(*
visô
)());

	@C/Double-linklist/Test.c

1 
	~"DLi°.h
"

2 
	~<°dio.h
>

4 
	$¥öt
(
Iãm
 
i
)

6 
	`¥ötf
("Êï∞ÊçÆÈ°π‰∏∫%d \n",
i
);

7 
	}
}

8 
	$maö
()

10 
DLi°
 *
∂i°
 = 
NULL
;

11 
PNode
 
p
 = 
NULL
;

13 
∂i°
 = 
	`InôLi°
();

14 
p
 = 
	`InsFú°
(
∂i°
,
	`MakeNode
(1));

15 
	`InsBef‹e
(
∂i°
,
p
,
	`MakeNode
(2));

16 
	`InsA·î
(
∂i°
,
p
,
	`MakeNode
(3));

18 
	`¥ötf
("pÂâçÈ©±‰ΩçÁΩÆÁöÑÂÄº‰∏∫%d\n",
	`GëIãm
(
	`GëPªvious
(
p
)));

19 
	`¥ötf
("p‰ΩçÁΩÆÁöÑÂÄº‰∏∫%d\n",
	`GëIãm
(
p
));

20 
	`¥ötf
("pÂêéÁªß‰ΩçÁΩÆÁöÑÂÄº‰∏∫%d\n",
	`GëIãm
(
	`GëNext
(
p
)));

23 
	`¥ötf
("ÈÅçÂéÜËæìÂá∫ÂêÑËäÇÁÇπÊï∞ÊçÆÈ°π:\n");

24 
	`Li°Tøvî£
(
∂i°
,
¥öt
);

25 
	`¥ötf
("Èô§‰∫ÜÂ§¥ËäÇÁÇπËØ•ÈìæË°®ÂÖ±Êúâ%d‰∏™ËäÇÁÇπ\n",
	`GëSize
(
∂i°
));

26 
	`FªeNode
(
	`DñFú°
(
∂i°
));

27 
	`¥ötf
("Âà†Èô§Á¨¨‰∏Ä‰∏™ËäÇÁÇπÂêéÈáçÊñ∞ÈÅçÂéÜËæìÂá∫‰∏∫:\n");

28 
	`Li°Tøvî£
(
∂i°
,
¥öt
);

29 
	`¥ötf
("Èô§‰∫ÜÂ§¥ËäÇÁÇπËØ•ÈìæË°®ÂÖ±Êúâ%d‰∏™ËäÇÁÇπ\n",
	`GëSize
(
∂i°
));

30 
	`De°royLi°
(
∂i°
);

31 
	`¥ötf
("ÈìæË°®Â∑≤Ë¢´ÈîÄÊØÅ\n");

32 
	}
}

	@C/Double-linklist/doble-linklist.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	sdoubÀlökli°
{

5 
	md©a
;

6 
doubÀlökli°
 *
	m√xt
;

7 
doubÀlökli°
 *
	m¥i‹
;

9 }
	tDoubÀlök
;

11 
DoubÀlök
 *
	$¸óéök
(
DoubÀlök
 *
L
)

13 
num
;

14 
DoubÀlök
 *
p
, *
q
;

15 
L
->
√xt
 = 
NULL
;

16 
q
 = (
DoubÀlök
 *)
	`mÆloc
((Doublelink));

17 i‡(!
q
)

18  
NULL
;

19 
q
 = 
L
;

21 
p
 = (
DoubÀlök
 *)
	`mÆloc
((Doublelink

23 
	`sˇnf
("%d", &
num
);

24 if(
num
 == 0)

26 
p
->
d©a
 = 
num
;

27 
p
->
¥i‹
 = 
q
;

28 
q
->
√xt
 = 
p
;

29 
q
 = 
p
;

31 
q
->
√xt
 = 
NULL
;

32 
	`¥ötf
("createlink over\n");

33  
L
;

34 
	}
}

36 
	$di•œylök
(
DoubÀlök
 *
L
)

38 
DoubÀlök
 *
p
;

39 
p
 = 
L
->
√xt
;

40 
p
){

41 
	`¥ötf
("%d ", 
p
->
d©a
);

42 
	`‰ì
(
p
);

43 
p
 =Ö->
√xt
;

46 
L
->
√xt
 = 
NULL
;

47 
	`¥ötf
("\n");

48 
	}
}

50 
	$maö
()

52 
DoubÀlök
 *
L
;

53 
L
 = (
DoubÀlök
 *)
	`mÆloc
((Doublelink));

54 
	`¥ötf
("InputÇum forÅheÜinklist, 0 isÅheÜast one:\n");

55 
	`¸óéök
(
L
);

56 
	`di•œylök
(
L
);

58 
	}
}

	@C/LinkList.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	#EÀmTy≥
 

	)

4 
	#Sètus
 

	)

5 
	#OK
 1

	)

6 
	#ERROR
 0

	)

8 
	sLi°
 {

9 
EÀmTy≥
 
	md©a
;

10 
Li°
 *
	m√xt
;

11 } 
	tlökli°
;

13 
Sètus
 
	$Cª©eLi°
(
lökli°
 * 
L
)

16 
lökli°
 *
p
;

17 
L
->
√xt
 = 
NULL
;

18 
p
 = (
lökli°
 *Ë
	`mÆloc
((linklist));

19 i‡(!
p
)

20  
ERROR
;

21 
	`sˇnf
("%d", &
p
->
d©a
);

22 
p
->
d©a
 != 0) {

23 
p
->
√xt
 = 
L
->next;

24 
L
->
√xt
 = 
p
;

25 
p
 = (
lökli°
 *Ë
	`mÆloc
((linklist));

26 
	`sˇnf
("%d", &
p
->
d©a
);

29  
OK
;

30 
	}
}

32 
Sètus
 
	$ªvî£
(
lökli°
 * 
L
)

35 
lökli°
 *
p
, *
q
;

36 
p
 = 
L
->
√xt
;

37 
L
->
√xt
 = 
NULL
;

38 
p
) {

39 
q
 = 
p
;

40 
p
 =Ö->
√xt
;

41 
q
->
√xt
 = 
L
->next;

42 
L
->
√xt
 = 
q
;

44  
OK
;

45 
	}
}

47 
Sètus
 
	$li°ö£π
(
lökli°
 * 
L
, 
i
, 
EÀmTy≥
 
e
)

50 
j
;

51 
lökli°
 *
p
, *
q
;

52 
q
 = 
L
;

53 
p
 = (
lökli°
 *Ë
	`mÆloc
((linklist));

54 i‡(!
p
)

55  
ERROR
;

56 
p
->
d©a
 = 
e
;

57 
j
 = 0; j < 
i
 - 1; ++j) {

58 
q
 = q->
√xt
;

60 
p
->
√xt
 = 
q
->next;

61 
q
->
√xt
 = 
p
;

62  
OK
;

63 
	}
}

65 
Sètus
 
	$li°dñ
(
lökli°
 * 
L
, 
i
, 
EÀmTy≥
 * 
e
)

68 
j
;

69 
lökli°
 *
p
;

70 
lökli°
 *
q
 = (lökli° *Ë
	`mÆloc
((linklist));

71 
p
 = 
L
;

72 
j
 = 0; j < 
i
 - 1; ++j) {

73 
p
 =Ö->
√xt
;

75 
q
 = 
p
->
√xt
;

76 *
e
 = 
q
->
d©a
;

77 
p
->
√xt
 = 
q
->next;

78 
q
->
√xt
 = 
NULL
;

79 
	`‰ì
(
q
);

81  
OK
;

82 
	}
}

84 
lökli°
 *
	$MîgeLi°
(
lökli°
 * 
La
,Üökli° * 
Lb
)

87 
lökli°
 *
Lc
;

88 
lökli°
 *
∑
, *
pb
, *
pc
;

89 
∑
 = 
La
->
√xt
;

90 
pb
 = 
Lb
->
√xt
;

91 
Lc
 = 
pc
 = 
La
;

92 
∑
 && 
pb
) {

93 i‡(
∑
->
d©a
 <
pb
->data) {

94 
pc
->
√xt
 = 
∑
;

95 
pc
 = 
∑
;

96 
∑
 =Öa->
√xt
;

98 
pc
->
√xt
 = 
pb
;

99 
pc
 = 
pb
;

100 
pb
 =Öb->
√xt
;

103 
pc
->
√xt
 = 
∑
 ?Ö®: 
pb
;

104  
Lc
;

105 
	}
}

107 
Sètus
 
	$di•œy
(
lökli°
 * 
L
)

109 
lökli°
 *
p
;

110 
p
 = 
L
->
√xt
;

111 
p
) {

112 
	`¥ötf
("%d ", 
p
->
d©a
);

113 
p
 =Ö->
√xt
;

115 
	`¥ötf
("\n");

116  
OK
;

117 
	}
}

119 
	$maö
()

121 
i
, 
di
;

122 
EÀmTy≥
 
e
, 
de
;

124 
lökli°
 *
L
 = (lökli° *Ë
	`mÆloc
((linklist));

127 
lökli°
 *
La
 = (lökli° *Ë
	`mÆloc
((linklist));

128 
lökli°
 *
Lb
 = (lökli° *Ë
	`mÆloc
((linklist));

129 
lökli°
 *
Lc
;

131 i‡(!
L
)

132  
ERROR
;

133 
	`¥ötf
("Please createáÜinklist:\n");

134 
	`Cª©eLi°
(
L
);

135 
	`¥ötf
("theÜistáfter create is ;\n");

136 
	`di•œy
(
L
);

137 
	`ªvî£
(
L
);

138 
	`¥ötf
("TheÜistáfterÑeverse is :\n");

139 
	`di•œy
(
L
);

140 
	`¥ötf
("please inputÅhe insertÜo &Élem:\n");

141 
	`sˇnf
("%d%d", &
i
, &
e
);

142 
	`li°ö£π
(
L
, 
i
, 
e
);

143 
	`¥ötf
("TheÜistáfter insert is ;\n");

144 
	`di•œy
(
L
);

145 
	`¥ötf
("please inputÅhe delÇumber :\n");

146 
	`sˇnf
("%d", &
di
);

147 
	`li°dñ
(
L
, 
di
, &
de
);

148 
	`¥ötf
("ThêdñÇum i†%d\n", 
de
);

149 
	`¥ötf
("TheÜistáfter del is :\n");

150 
	`di•œy
(
L
);

151 
	`¥ötf
("createÅheÜistÜa:\n");

152 
	`Cª©eLi°
(
La
);

153 
	`ªvî£
(
La
);

154 
	`¥ötf
("createÅheÜistÜb:\n");

155 
	`Cª©eLi°
(
Lb
);

156 
	`ªvî£
(
Lb
);

157 
	`¥ötf
("theÜistáfter merge is :\n");

158 
Lc
 = 
	`MîgeLi°
(
La
, 
Lb
);

159 
	`di•œy
(
Lc
);

160 
	`‰ì
(
L
);

161 
	`‰ì
(
La
);

162 
	`‰ì
(
Lb
);

164 
	}
}

	@C/LinkList2.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	#ELemTy≥
 

	)

11 
	#Sètus
 

	)

12 
	#OK
 1

	)

13 
	#ERROR
 0

	)

15 
	sLi°


17 
ELemTy≥
 
	md©a
;

18 
Li°
 *
	m√xt
;

19 }
	tlökli°
;

22 
Sètus
 
	$Cª©Li°
(
lökli°
 *
L
)

24 
lökli°
 *
p
, *
r
;

25 
r
 = 
L
;

26 
p
 = (
lökli°
 *)
	`mÆloc
((linklist));

27 if(!
p
)

28  
ERROR
;

29 
	`sˇnf
("%d", &
p
->
d©a
);

30 
p
->
d©a
 != 0){

31 
r
->
√xt
 = 
p
;

32 
r
 = 
p
;

33 
p
 = (
lökli°
 *)
	`mÆloc
((linklist));

34 
	`sˇnf
("%d", &
p
->
d©a
);

36 
r
->
√xt
 = 
NULL
;

37  
OK
;

38 
	}
}

41 
Sètus
 
	$di•œy
(
lökli°
 *
L
)

43 
lökli°
 *
p
;

44 
p
 = 
L
->
√xt
;

45 
p
){

46 
	`¥ötf
("%d ", 
p
->
d©a
);

47 
p
 =Ö->
√xt
;

49 
	`¥ötf
("\n");

50  
OK
;

51 
	}
}

54 
Sètus
 
	$ªvî£
(
lökli°
 *
L
)

56 
lökli°
 *
p
, *
q
;

57 
p
 = 
L
->
√xt
;

58 
L
->
√xt
 = 
NULL
;

59 
p
){

60 
q
 = 
p
;

61 
p
 =Ö->
√xt
;

62 
q
->
√xt
 = 
L
->next;

63 
L
->
√xt
 = 
q
;

65  
OK
;

66 
	}
}

69 
Sètus
 
	$li°ö£π
(
lökli°
 *
L
, 
i
, 
ELemTy≥
 
e
)

71 
j
;

72 
lökli°
 *
p
, *
q
;

73 
q
 = 
L
;

74 
p
 = (
lökli°
 *)
	`mÆloc
((linklist));

75 i‡(!
p
)

76  
ERROR
;

77 
p
->
d©a
 = 
e
;

78 
j
 = 0; j < 
i
 - 1; j++){

79 
q
 = q->
√xt
;

81 
p
->
√xt
 = 
q
->next;

82 
q
->
√xt
 = 
p
;

83  
OK
;

85 
	}
}

88 
Sètus
 
	$li°dñ
(
lökli°
 *
L
, 
i
, 
ELemTy≥
 *
e
)

90 
j
;

91 
lökli°
 *
p
;

92 
lökli°
 *
q
 = (lökli° *)
	`mÆloc
((linklist));

93 
p
 = 
L
;

94 
j
 = 0; j < 
i
-1; j++){

95 
p
ı->
√xt
;

97 
q
 = 
p
->
√xt
;

98 *
e
 = 
q
->
d©a
;

99 
p
->
√xt
 = 
q
->next;

100 
q
->
√xt
 =
NULL
;

101 
	`‰ì
(
q
);

102  
OK
;

103 
	}
}

105 
	$maö
()

107 
i
, 
di
;

108 
ELemTy≥
 
e
, 
de
;

110 
lökli°
 *
L
 = (lökli° *)
	`mÆloc
((linklist));

111 i‡(!
L
)

112  
ERROR
;

113 
	`¥ötf
("creatáÜinklist\n");

114 
	`Cª©Li°
(
L
);

115 
	`¥ötf
("L = %d \n", 
L
->
√xt
->
d©a
);

116 
	`di•œy
(
L
);

120 
	`ªvî£
(
L
);

121 
	`di•œy
(
L
);

122 
	`¥ötf
("please inputÅhe insertÜo &Élem:\n");

123 
	`sˇnf
("%d %d", &
i
, &
e
);

124 
	`li°ö£π
(
L
, 
i
, 
e
);

125 
	`¥ötf
("please inputÅhe delÇumber:\n");

126 
	`sˇnf
("%d", &
di
);

127 
	`li°dñ
(
L
, 
di
, &
de
);

128 
	`di•œy
(
L
);

129 
	`‰ì
(
L
);

132 
	}
}

	@C/a.c

8 
sh¨ed
;

9 
	$maö
()

11 
a
 = 100;

12 
	`sw≠
(&
a
, &
sh¨ed
);

13 
	}
}

	@C/b.c

8 
	gsh¨ed
 = 1;

9 
	$sw≠
–*
a
, *
b
)

11 *
a
 ^*
b
 ^= *a ^= *b;

12 
	}
}

	@C/base64.c

14 
	~<°dio.h
>

16 c⁄° 
	gba£
[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

17 * 
ba£64_ícode
(c⁄° * 
d©a
, 
d©a_Àn
);

18 * 
ba£64_decode
(c⁄° * 
d©a
, 
d©a_Àn
);

19 
föd_pos
(
ch
);

21 
	$maö
(
¨gc
, * 
¨gv
[])

23 *
t
;

24 
a
[100];

25 
	`¥ötf
("input your string: ");

26 
	`sˇnf
("%s", 
a
);

27 
t
 = 
a
;

28 
i
 = 0;

29 
j
 = 
	`°æí
(
t
);

30 *
íc
 = 
	`ba£64_ícode
(
t
, 
j
);

31 
Àn
 = 
	`°æí
(
íc
);

32 *
dec
 = 
	`ba£64_decode
(
íc
, 
Àn
);

33 
	`¥ötf
("\n‹igöÆ: %s\n", 
t
);

34 
	`¥ötf
("\√ncoded : %s\n", 
íc
);

35 
	`¥ötf
("\ndecoded : %s\n", 
dec
);

36 
	`‰ì
(
íc
);

37 
	`‰ì
(
dec
);

39 
	}
}

41 *
	$ba£64_ícode
(c⁄° * 
d©a
, 
d©a_Àn
)

44 
¥ï¨e
 = 0;

45 
ªt_Àn
;

46 
ãmp
 = 0;

47 *
ªt
 = 
NULL
;

48 *
f
 = 
NULL
;

49 
tmp
 = 0;

50 
ch™ged
[4];

51 
i
 = 0;

52 
ªt_Àn
 = 
d©a_Àn
 / 3;

53 
ãmp
 = 
d©a_Àn
 % 3;

54 i‡(
ãmp
 > 0)

56 
ªt_Àn
 += 1;

58 
ªt_Àn
 =Ñet_len*4 + 1;

59 
ªt
 = (*)
	`mÆloc
(
ªt_Àn
);

61 i‡–
ªt
 =
NULL
)

63 
	`¥ötf
("NoÉnough memory.\n");

64 
	`exô
(0);

66 
	`mem£t
(
ªt
, 0, 
ªt_Àn
);

67 
f
 = 
ªt
;

68 
tmp
 < 
d©a_Àn
)

70 
ãmp
 = 0;

71 
¥ï¨e
 = 0;

72 
	`mem£t
(
ch™ged
, '\0', 4);

73 
ãmp
 < 3)

76 i‡(
tmp
 >
d©a_Àn
)

80 
¥ï¨e
 = (’ª∑ª << 8Ë| (
d©a
[
tmp
] & 0xFF));

81 
tmp
++;

82 
ãmp
++;

84 
¥ï¨e
 = (¥ï¨e<<((3-
ãmp
)*8));

86 
i
 = 0; i < 4 ;i++ )

88 i‡(
ãmp
 < 
i
)

90 
ch™ged
[
i
] = 0x40;

94 
ch™ged
[
i
] = (
¥ï¨e
>>((3-i)*6)) & 0x3F;

96 *
f
 = 
ba£
[
ch™ged
[
i
]];

98 
f
++;

101 *
f
 = '\0';

103  
ªt
;

105 
	}
}

107 
	$föd_pos
(
ch
)

109 *
±r
 = (*)
	`°ºchr
(
ba£
, 
ch
);

110  (
±r
 - 
ba£
);

111 
	}
}

113 *
	$ba£64_decode
(c⁄° *
d©a
, 
d©a_Àn
)

115 
ªt_Àn
 = (
d©a_Àn
 / 4) * 3;

116 
equÆ_cou¡
 = 0;

117 *
ªt
 = 
NULL
;

118 *
f
 = 
NULL
;

119 
tmp
 = 0;

120 
ãmp
 = 0;

121 
√ed
[3];

122 
¥ï¨e
 = 0;

123 
i
 = 0;

124 i‡(*(
d©a
 + 
d©a_Àn
 - 1) == '=') {

125 
equÆ_cou¡
 += 1;

127 i‡(*(
d©a
 + 
d©a_Àn
 - 2) == '=')

129 
equÆ_cou¡
 += 1;

131 i‡(*(
d©a
 + 
d©a_Àn
 - 3) == '=')

133 
equÆ_cou¡
 += 1;

135 
equÆ_cou¡
)

138 
ªt_Àn
 += 4;

141 
ªt_Àn
 += 4;

144 
ªt_Àn
 += 3;

147 
ªt_Àn
 += 2;

150 
ªt
 = (*)
	`mÆloc
(
ªt_Àn
);

151 i‡(
ªt
 =
NULL
)

153 
	`¥ötf
("NoÉnough memory.\n");

154 
	`exô
(0);

156 
	`mem£t
(
ªt
, 0, 
ªt_Àn
);

157 
f
 = 
ªt
;

158 
tmp
 < (
d©a_Àn
 - 
equÆ_cou¡
))

160 
ãmp
 = 0;

161 
¥ï¨e
 = 0;

162 
	`mem£t
(
√ed
, 0, 4);

163 
ãmp
 < 4)

165 i‡(
tmp
 >(
d©a_Àn
 - 
equÆ_cou¡
))

169 
¥ï¨e
 = (¥ï¨ê<< 6Ë| (
	`föd_pos
(
d©a
[
tmp
]));

170 
ãmp
++;

171 
tmp
++;

173 
¥ï¨e
 =Öª∑ª << ((4-
ãmp
) * 6);

174 
i
=0; i<3 ;i++ )

176 i‡(
i
 =
ãmp
)

180 *
f
 = ()((
¥ï¨e
>>((2-
i
)*8)) & 0xFF);

181 
f
++;

184 *
f
 = '\0';

185  
ªt
;

186 
	}
}

	@C/data2.c

8 
	~<°dio.h
>

9 
	~<limôs.h
>

11 
	$maö
()

13 
	`¥ötf
("UCHAR_MAX=%-10d SCHAR_MIN=%-10d SCHAR_MAX=%-10d\n",
UCHAR_MAX
,
SCHAR_MIN
,
SCHAR_MAX
);

14 
	`¥ötf
("SHRT_MIN=%-11d SHRT_MAX=%-11d USHRT_MAX=%-11d\n",
SHRT_MIN
,
SHRT_MAX
,
USHRT_MAX
);

15 
	`¥ötf
("INT_MIN=%-12d INT_MAX=%-12d UINT_MAX=%-12u\n",
INT_MIN
,
INT_MAX
,
UINT_MAX
);

16 
	`¥ötf
("LONG_MIN=%-11ld LONG_MAX=%-11ld ULONG_MAX=%-11u\n",
LONG_MIN
,
LONG_MAX
,
ULONG_MAX
);

18 
	}
}

	@C/del-same.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

11 
	$dñßme
(*
°rög
)

13 *
de°
;

14 
i
 = 0;

16 
	`¥ötf
("thê°rögÜígth i†%d\n", 
	`°æí
(
°rög
));

17 *
de°
 = *
°rög
;

18 
	`¥ötf
("fú° ch¨ i†%s\n", 
de°
);

19 *
°rög
 != '\0'){

20 *
de°
 != '\0'){

21 i‡(*(
de°
Ë=*
°rög
){

22 
i
 = 0;

25 
de°
++;

26 
i
++;

28 i‡(
i
){

29 *
de°
 = *
°rög
;

30 
i
 = 0;

32 
°rög
++;

42 
	`¥ötf
("%s\n", 
de°
);

44 
	}
}

46 
	$maö
()

48 *
ßr
;

49 
	`¥ötf
("input string:\n");

51 
ßr
 = "abcdfdabcdfadvf";

52 
	`¥ötf
 ("%s\n", 
ßr
);

53 
	`dñßme
(
ßr
);

56 
	}
}

	@C/dev/tq.c

8 
	~<löux/öô.h
>

9 
	~<löux/moduÀ.h
>

10 
	~<löux/cdev.h
>

11 
	~<löux/fs.h
>

12 
	~<löux/ty≥s.h
>

13 
	~<löux/uac˚ss.h
>

14 
	~<löux/devi˚.h
>

15 
	~<∂©/gpio-cfg.h
>

16 
	~<asm/gpio.h
>

18 
	gmaj‹
;

20 
cdev
 
	gbä_cdev
;

23 
	gkey_vÆue
;

27 
ssize_t
 
	$buâ⁄_ªad
(
fûe
 *fûe, 
__u£r
 *
buf
, 
size_t
 
cou¡
, 
loff_t
 *
ofÂ
)

29 
°©us
 = 0;

32 
°©us
 = 
	`gpio_gë_vÆue
(
	`S5PV210_GPH0
(0));

33 i‡(
°©us
 == 1)

34 
key_vÆue
 = 0X50;

36 
key_vÆue
 = 0x51;

39 
	`c›y_to_u£r
(
buf
, &
key_vÆue
,(key_value));

41  
cou¡
;

42 
	}
}

45 
fûe_›î©i⁄s
 
	gbä_f›s
 = {

46 .
ow√r
 = 
THIS_MODULE
;

47 .
	gªad
 = 
buâ⁄_ªad
;

51 
˛ass
 *
	gbä_˛s
;

54 
__öô
 
	$buâ⁄_öô
(){

55 
dev_t
 
dev_id
;

57 i‡(
maj‹
){

59 
dev_id
 = 
	`MKDEV
(
maj‹
, 0);

60 
	`ªgi°î_chrdev_ªgi⁄
(
dev_id
, 1, "button");

63 
	`Æloc_ch¨dev_ªgi⁄
(&
dev_id
, 0, 1, "button");

64 
maj‹
 = 
	`MAJOR
(
dev_id
);

67 
	`cdev_öô
(&
bä_cdev
, &
bä_f›s
);

70 
	`cdev_add
(&
bä_cdev
, 
dev_id
, 1);

75 
bä_˛s
 = 
	`˛ass_¸óã
(
THIS_MODULE
, "button");

77 
	`devi˚_¸óã
(
bä_˛s
, 
NUL
, 
dev_id
, NUL, "button");

81 
	`gpio_ªque°
(
	`S5PV210_GPH0
(0), "GPH0_0");

83 
	`gpio_dúe˘i⁄_öput
(
	`S5PV210_GPH0
(0));

86 
	}
}

89 
__exô
 
	$buâ⁄_exô
(){

91 
	`gpio_‰ì
(
	`S5PV210_GPH0
(0));

94 
	`devi˚_de°‹y
(
bä_˛s
, 
	`MKDEV
(
maj‹
, 0));

95 
	`˛ass_de°‹y
(
bä_˛s
);

98 
	`cdev_dñ
(&
bä_cdev
);

101 
	`uƒegi°î_chrdev_ªgi⁄
(
	`MKDEV
(
maj‹
, 0), 1);

102 
	}
}

104 
moduÀ_öô
(
buâ⁄_öô
);

105 
moduÀ_exô
(
buâ⁄_exô
);

106 
MODULE_LICENSE
("GPL v2");

	@C/erfenchazhao.c

8 
	~<°dio.h
>

10 
	$bö¨y_£¨ch
(
key
, 
a
[], 
n
)

12 
low
, 
high
, 
mid
, 
cou¡
 = 0, 
cou¡1
 = 0;

13 
low
 = 0;

14 
high
 = 
n
 - 1;

15 
low
 < 
high
){

16 
cou¡
++;

17 
mid
 = (
low
 + 
high
) / 2;

18 i‡(
key
 < 
a
[
mid
])

19 
high
 = 
mid
 -1;

20 i‡(
key
 > 
a
[
mid
])

21 
low
 = 
mid
 + 1;

22 i‡(
key
 =
mid
){

23 
	`¥ötf
 ("föd suc˚ss!\¿födÅime†%dá[%d] = %d\n", 
cou¡
, 
mid
, 
key
);

24 
cou¡
 ++;

28 i‡(
cou¡
 == 0)

29 
	`¥ötf
 ("findÉrror!\n");

30 
	}
}

32 
	$maö
()

34 
i
 , 
key
, 
n
;

35 
a
[10] = {0,1,2,3,4,5,6,7,8,9};

36 
key
 = 8;

37 
	`bö¨y_£¨ch
(
key
, 
a
, 10);

39 
	}
}

	@C/example.c

1 
	~<°dio.h
>

3 
	$maö
()

5 
a
[6],
i
 = 1;

7 
i
 < 6)

9 
	`sˇnf
("%d", &
a
[
i
]);

10 
i
++;

13 
	`¥ötf
("Before sequence:\n");

14 
i
 = 1; i < 6; i++ )

16 
	`¥ötf
("a[%d] = %d ", 
i
, 
a
[i]);

18 
	`¥ötf
("\n");

20 
	`£quí˚
(
a
, 5);

22 
	`¥ötf
("After sequence:\n");

23 
i
 = 1;

25 
	`¥ötf
("a[%d] = %d ", 
i
, 
a
[i]);

26 
i
++;

27 }
i
 < 6);

31 
	}
}

	@C/feibonaqieshulie.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
i
;

13 
f
[31];

14 
f
[1] = 1, f[2] = 1;

16 
i
 = 3; i < 31; i++)

17 
f
[
i
] = f[i - 1] + f[i - 2];

18 
i
 = 1; i < 31; i++){

19 
	`¥ötf
("%10ld", 
f
[
i
]);

20 i‡(
i
 % 5 == 0)

21 
	`¥ötf
("\n");

23 
	}
}

	@C/feibonaqieshulie_2.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
i
, 
j
;

13 
f
[31];

14 
f
[1] = f[2] = 1;

16 
i
 = 3; i < 31; i++)

17 
f
[
i
] = f[i - 2] + f[i - 1];

19 
j
 = 1; j < 31; j++)

20 
	`¥ötf
("%10ld", 
f
[
j
]);

21 
	`¥ötf
 ("/n");

24 
	}
}

	@C/fenkuaichazhao.c

12 
	~<°dio.h
>

14 
	södex


16 
	mkey
;

17 
	m°¨t
;

18 
	míd
;

19 }
	gödex_èbÀ
[4];

21 
	$block_£¨ch
(
key
, 
a
[])

23 
i
,
j
;

24 
i
 = 1;

25 
i
 <3 && 
key
 > 
ödex_èbÀ
[i].key)

26 
i
++;

27 i‡(
i
 > 3)

29 
j
 = 
ödex_èbÀ
[
i
].
°¨t
;

30 
j
 <
ödex_èbÀ
[
i
].
íd
 && 
a
[j] !
key
)

31 
j
++;

32 i‡(
j
 > 
ödex_èbÀ
[
i
].
íd
)

33 
j
 = 0;

34  
j
;

35 
	}
}

37 
	$maö
()

39 
i
, 
j
 = 0, 
k
, 
key
, 
a
[16];

40 
	`¥ötf
("please input 15Çumbers: \n");

41 
i
 = 1; i < 16; i++)

42 
	`sˇnf
("%d", &
a
[
i
]);

43 
i
 = 1; i <= 3; i++){

44 
ödex_èbÀ
[
i
].
°¨t
 = 
j
 + 1;

45 
j
 = j + 1;

46 
ödex_èbÀ
[
i
].
íd
 = 
j
 + 4;

47 
j
 = j + 4;

48 
ödex_èbÀ
[
i
].
key
 = 
a
[
j
];

50 
	`¥ötf
("whichÇumber do you want search:\n");

51 
	`sˇnf
("%d", &
key
);

52 
k
 = 
	`block_£¨ch
(
key
, 
a
);

53 i‡(
k
 != 0)

54 
	`¥ötf
("£¨ch suc˚ss,Åhêloˇti⁄ is: %d\n", 
k
);

56 
	`¥ötf
("searchÉrror\n");

57 
	}
}

	@C/gedebahe.c

8 
	~<°dio.h
>

10 
	$ss
(
i
)

12 
j
;

13 i‡(
i
 <= 1)

15 i‡(
i
 == 2)

17 
j
 = 2; j < 
i
; j++){

18 i‡(
i
 % 
j
 == 0)

20 i‡(
i
 !
j
 + 1)

25 
	}
}

27 
	$maö
()

29 
i
, 
j
, 
k
, 
Êag1
,
Êag2
, 
n
 = 0;

31 
i
 = 4; i < 100; i += 2)

32 
k
 = 2; k <
i
 / 2; k++){

33 
j
 = 
i
 - 
k
;

34 
Êag1
 = 
	`ss
(
k
);

35 i‡(
Êag1
){

36 
Êag2
 = 
	`ss
(
j
);

37 i‡(
Êag2
){

38 
	`¥ötf
("%5d =%3d+%3d,", 
i
, 
k
, 
j
);

39 
n
++;

40 i‡(
n
 % 5 == 0)

41 
	`¥ötf
("\n");

45 
	`¥ötf
("\n");

47 
	}
}

	@C/guibingpaixu.c

26 
	~<°dio.h
>

28 
	$mîge
(
r
[], 
s
[], 
x1
, 
x2
, 
x3
)

30 
i
, 
j
, 
k
;

31 
i
 = 
x1
;

32 
j
 = 
x2
 + 1;

33 
k
 = 
x1
;

34 (
i
 <
x2
Ë&& (
j
 <
x3
)){

35 i‡(
r
[
i
] <r[
j
]){

36 
s
[
k
] = 
r
[
i
];

37 
i
++;

38 
k
++;

40 
s
[
k
] = 
r
[
j
];

41 
j
++;

42 
k
++;

45 
i
 <
x2
)

46 
s
[
k
++] = 
r
[
i
++];

47 
j
 <
x3
)

48 
s
[
k
++] = 
r
[
j
++];

49 
	}
}

51 
	$mîge_s‹t
(
r
[], 
s
[], 
m
, 
n
)

53 
p
, 
t
[20];

54 i‡(
m
 =
n
)

55 
s
[
m
] = 
r
[m];

57 
p
 = (
m
 + 
n
) / 2;

58 
	`mîge_s‹t
(
r
, 
t
, 
m
, 
p
);

59 
	`mîge_s‹t
(
r
, 
t
, 
p
 + 1, 
n
);

60 
	`mîge
(
t
, 
s
, 
m
, 
p
, 
n
);

62 
	}
}

64 
	$maö
()

66 
i
, 
a
[11];

68 
	`¥ötf
("ËØ∑ËæìÂÖ•10‰∏™Êï∞ÊçÆÔºö\n");

69 
i
 = 1; i <= 10; i++)

70 
	`sˇnf
("%d",&
a
[
i
]);

72 
	`mîge_s‹t
(
a
,á, 1, 10);

74 
	`¥ötf
("ÊéíÂ∫èÂêéÁöÑÈ°∫Â∫èÊòØÔºö\n");

75 
i
 = 1; i <= 10; i++)

76 
	`¥ötf
("%5d",
a
[
i
]);

78 
	`¥ötf
("\n");

80 
	}
}

	@C/hashchazhao.c

8 
	~<°dio.h
>

9 
	~<time.h
>

10 
	#Max
 11

	)

11 
	#N
 8

	)

13 
	ghashèbÀ
[
Max
];

15 
	$func
(
vÆue
)

17  
vÆue
 % 
Max
;

18 
	}
}

20 
	$£¨ch
(
key
)

22 
pos
, 
t
;

23 
pos
 = 
	`func
(
key
);

24 
t
 = 
pos
;

25 
hashèbÀ
[
t
] !
key
 && hashtable[t] != -1)

27 
t
 = (à+ 1Ë% 
Max
;

28 i‡(
pos
 =
t
)

32 i‡(
hashèbÀ
[
t
] == -1)

35  
t
;

36 
	}
}

38 
	$¸óthash
(
key
)

40 
pos
, 
t
;

41 
pos
 = 
	`func
(
key
);

42 
t
 = 
pos
;

43 
hashèbÀ
[
t
] != -1)

45 
t
 = (à+ 1Ë% 
Max
;

46 i‡(
pos
 =
t
){

47 
	`¥ötf
("The hashtable is full");

51 
hashèbÀ
[
t
] = 
key
;

52 
	}
}

54 
	$maö
()

56 
Êag
[50];

57 
i
, 
j
, 
t
;

58 
i
 = 0; i < 
Max
; i++)

59 
hashèbÀ
[
i
] = -1;

60 
i
 = 0; i < 50; i++)

61 
Êag
[
i
] = 0;

63 
	`§™d
(()
	`time
(0));

64 
i
 = 0;

65 
i
 !
N
){

66 
t
 = 
	`ønd
() % 50;

67 i‡(
Êag
[
t
] == 0){

68 
	`¸óthash
(
t
);

69 
	`¥ötf
("%2d", 
t
);

70 
j
 = 0; j < 
Max
; j++)

71 
	`¥ötf
("(%2d)", 
hashèbÀ
[
j
]);

72 
	`¥ötf
("\n");

73 
Êag
[
t
] = 1;

74 
i
++;

77 
	`¥ötf
("please inputÅheÇumber which you want search: ");

78 
	`sˇnf
("%d", &
t
);

79 i‡(
t
 > 0 &&Å < 50){

80 
i
 = 
	`£¨ch
(
t
);

81 i‡(
i
 != -1)

82 
	`¥ötf
("£¨ch suc˚s£dándÅhêloˇti⁄ i†: %d\n", 
i
);

84 
	`¥ötf
("searchÉrror!\n");

87 
	`¥ötf
("inputÉrror!\n");

89 
	}
}

	@C/huawei/1.c

12 
	~<°dio.h
>

13 
	$w©î
(
n
)

15 
i
, 
m
, 
cou¡
 = 0;

16 
n
 > 1){

17 
i
 = 
n
 % 3;

18 
m
 = 
n
 / 3;

19 
cou¡
 +
m
;

20 
n
 = 
m
 + 
i
;

21 i‡(
n
 == 2){

22 
cou¡
++;

23 
n
 = 0;

27 
	`¥ötf
("%d\n", 
cou¡
);

29 
	}
}

31 
	$maö
()

33 
n
, 
j
;

34 
j
 = 0; j < 10; j++){

35 i‡(
	`sˇnf
("%d", &
n
Ë=
EOF
)

37 if(
n
 == 0)

39 
	`w©î
(
n
);

43 
	}
}

	@C/huawei/11.c

	@C/huawei/2-2.c

18 
	~<°dio.h
>

19 
	$maö
()

21 
i
,
j
,
n
,
k
,
t
; 
s
[65535];

22 
	`sˇnf
("%d",&
n
)!=
EOF
)

24 
t
=0;t<
n
;t++)

26 
	`sˇnf
("%d",&
s
[
t
]);

28 
i
=0;i<
n
-1;i++)

30 
j
=
i
+1;j<
n
;j++)

32 if(
s
[
i
]>s[
j
])

33 { 
k
=
s
[
i
];

34 
s
[
i
]=s[
j
];

35 
s
[
j
]=
k
;

39 
i
=0;i<
n
;i++){

40 if(
s
[
i
]!=s[i+1])

41 
	`¥ötf
("%d\n",
s
[
i
]);

44 
	}
}

	@C/huawei/2.c

1 
	~<°dio.h
>

23 
	$maö
()

25 
N
, 
i
, 
j
, 
m
, 
Êag
 = 0,
l
 = 1;

26 
a
[1001], 
b
[1001];

27 
	`sˇnf
("%d", &
N
Ë!
EOF
) {

28 i‡(
	`sˇnf
("%d", &
b
[0]Ë=
EOF
)

31 
i
 = 1; i < 
N
; i++){

32 i‡(
	`sˇnf
("%d", &
b
[
i
]Ë=
EOF
)

50 
tmp
, 
d©a
[1001];

51 
d©a
[0] = 
b
[0];

52 
i
 = 1; i < 
N
; i++){

53 
j
 = 0; j < 
i
; j++){

54 if(
b
[
i
] < 
d©a
[
j
]){

55 
tmp
 = 
b
[
i
];

56 
b
[
i
] = 
d©a
[
j
];

57 
d©a
[
j
] = 
tmp
;

59 
d©a
[
i
] = 
b
[i];

64 
i
 = 0; i < 
N
; i++){

65 i‡(
d©a
[
i
] != data[i+1])

66 
	`¥ötf
("%d\n", 
d©a
[
i
]);

70 
	}
}

	@C/huawei/3.c

13 
	~<°dio.h
>

14 
	~<°rög.h
>

16 
	$maö
()

18 
i
, 
j
, 
l
, 
m
;

19 
cou¡
 = 0;

20 
°r
[100];

21 
	`gës
(
°r
)){

22 
l
 = 
	`°æí
(
°r
);

23 
cou¡
 = 0

25 
i
 = 
l
-1; i > 1; i--){

26 
m
 = 1;

27 
j
 = 
l
 - 1 - 
i
;

28 
j
 > 0){

29 
m
 *= 16;

30 
j
--;

32 i‡('0' <
°r
[
i
] && str[i] <= '9')

33 
cou¡
 +(
°r
[
i
] - '0'Ë* 
m
;

34 i‡('A' <
°r
[
i
] && str[i] <= 'F')

35 
cou¡
 +((
°r
[
i
] - 'A'Ë+ 10Ë* 
m
;

37 
	`¥ötf
("%d\n", 
cou¡
);

40 
	}
}

	@C/huawei/4-2.c

1 
	~<°dio.h
>

3 
	slök
{

4 
lök
 *
	m√xt
;

5 
	md©a
;

6 }
	tnode
;

8 
	$maö
()

10 
i
, 
N
;

11 
node
 
a
[1000], *
p
;

12 
	`sˇnf
("%d", &
N
Ë!
EOF
){

13 
i
 = 0; i < 
N
-1; i++){

14 
a
[
i
].
d©a
 = i;

15 
a
[
i
].
√xt
 = &a[i+1];

17 
a
[
i
].
d©a
 = i;

18 
a
[
i
].
√xt
 =á;

23 
p
 = 
a
;

25 i‡(
p
 =p->
√xt
){

26 
	`¥ötf
("%d\n",
p
->
d©a
);

29 
p
->
√xt
->next =Ö->next->next->next;

30 
p
 =Ö->
√xt
->next;

34 
	}
}

	@C/huawei/4.c

12 
	~<°dio.h
>

14 
	squeue
{

15 
queue
 *
	m√xt
;

16 
	mvÆ
;

17 }
	tQUEUE_S
;

19 
	$maö
(){

20 
n
, 
i
;

21 
QUEUE_S
 
q
[1000], *
p
;

23 
	`sˇnf
("%d", &
n
Ë!
EOF
){

26 
i
 = 0; i < 
n
 - 1; i++){

27 
q
[
i
].
vÆ
 = i;

28 
q
[
i
].
√xt
 = &q[i + 1];

30 
q
[
i
].
vÆ
 = i;

31 
q
[
i
].
√xt
 = q;

33 
p
 = 
q
;

35 i‡(
p
 =p->
√xt
){

36 
	`¥ötf
("%d\n", 
p
->
vÆ
);

39 
p
->
√xt
->next =Ö->next->next->next;

40 
p
 =Ö->
√xt
->next;

44 
	}
}

	@C/huawei/5-2.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

4 
	$maö
()

6 
i
, 
Àn
, 
c
[52] = { 0 };

7 
s
[101];

9 
	`sˇnf
("%s",
s
Ë!
EOF
){

10 
i
 = 0, 
Àn
 = 
	`°æí
(
s
);i <Üen; i++){

11 if(
s
[
i
] >= 'a' && s[i] <= 'z'){

12 if(
c
[
s
[
i
] - 'a'] == 0){

13 
	`¥ötf
("%c", 
s
[
i
]);

14 
c
[
s
[
i
] - 'a'] = 1;

17 if(
s
[
i
] >= 'A' && s[i] <= 'Z'){

18 if(
c
[
s
[
i
] - 'A' + 26] == 0){

19 
	`¥ötf
("%c", 
s
[
i
]);

20 
c
[
s
[
i
] - 'A' + 26] = 1;

24 
	`¥ötf
("\n");

25 
i
 = 0; i < 52; i++)

26 
c
[
i
] = 0;

29 
	}
}

	@C/huawei/5.c

11 
	~<°dio.h
>

12 
	~<°rög.h
>

14 
	$maö
()

16 
i
, 
j
, 
l
, 
m
, 
Êag
;

17 
öput
[100], 
ouçut
[100];

19 
	`gës
(
öput
)){

20 
l
 = 
	`°æí
(
öput
);

21 
ouçut
[0] = 
öput
[0];

23 
i
 = 1; i < 
l
; i++) {

24 
m
 = 
	`°æí
(
ouçut
);

25 
Êag
 = 1;

27 
j
 = 0; j < 
m
; j++){

28 i‡(
ouçut
[
j
] =
öput
[
i
]){

29 
Êag
 = 0;

34 i‡(
Êag
 == 1)

35 
ouçut
[
m
] = 
öput
[
i
];

38 
	`¥ötf
("%s\n", 
ouçut
);

41 
	}
}

	@C/huawei/6.c

19 
	~<°dio.h
>

20 
	spoöt


22 
	mx
, 
	my
;

23 } 
	gp
[81];

24 
	gnum
, 
	gÊag
, 
	gm≠
[10][10];

25 
	$judge
(
n
, 
k
)

27 
i
, 
j
, 
x
, 
y
;

28 
i
 = 0; i < 9; i++)

30 if(
i
 !
p
[
n
].
y
 && 
m≠
[p[n].
x
][i] =
k
)

32 if(
i
 !
p
[
n
].
x
 && 
m≠
[i][p[n].
y
] =
k
)

35 
x
 = 
p
[
n
].x / 3 * 3;

36 
y
 = 
p
[
n
].y / 3 * 3;

37 
i
 = 0; i < 3; i++)

38 
j
 = 0; j < 3; j++)

39 if(
m≠
[
x
+
i
][
y
+
j
] =
k
 && (ò!
p
[
n
].x || j !=Ö[n].y))

42 
	}
}

43 
	$dfs
(
n
)

45 
i
;

46 if(
n
 =
num
)

48 
Êag
 = 1;

51 
i
 = 1; i < 10; i++)

53 if(
	`judge
(
n
, 
i
))

55 
m≠
[
p
[
n
].
x
][p[n].
y
] = 
i
;

56 
	`dfs
(
n
 + 1);

57 if(
Êag
)

59 
m≠
[
p
[
n
].
x
][p[n].
y
] = 0;

63 
	}
}

64 
	$maö
()

66 
i
, 
j
, 
t
 = 0;

67 
s
[2];

68 
	`sˇnf
("%s", 
s
) != -1)

70 
num
 = 
Êag
 = 0;

71 if(
s
[0] == '0')

72 
p
[
num
].
x
 = 0,Ö[num++].
y
 = 0, 
m≠
[0][0] = 0;

74 
m≠
[0][0] = 
s
[0] - '0';

75 
i
 = 0; i < 9; i++)

76 
j
 = 0; j < 9; j++)

77 if(
i
 || 
j
)

79 
	`sˇnf
("%s", 
s
);

80 if(
s
[0] == '0')

81 
p
[
num
].
x
 = 
i
,Ö[num++].
y
 = 
j
, 
m≠
[i][j] = 0;

83 
m≠
[
i
][
j
] = 
s
[0] - '0';

85 
	`dfs
(0);

86 if(
t
++)

87 
	`¥ötf
("\n");

88 
i
 = 0; i < 9; i++)

90 
j
 = 0; j < 8; j++)

91 
	`¥ötf
("%d ", 
m≠
[
i
][
j
]);

92 
	`¥ötf
("%d\n", 
m≠
[
i
][8]);

96 
	}
}

	@C/huawei/7.c

17 
	~<°dio.h
>

18 
	~<°rög.h
>

19 
	$s‹t
(
b
[], 
m
, 
l
)

21 
i
, 
max
;

22 
max
 = 
b
[
m
];

23 
i
 = 
m
; i <
l
; i++){

24 i‡(
b
[
i
] > 
max
)

25 
max
 = 
b
[
i
];

27  
max
;

29 
	}
}

30 
	$maö
()

32 
N
, 
M
, 
i
, 
A
, 
B
, 
a
[300000];

33 
C
[1];

34 
	`sˇnf
("%d %d", &
N
, &
M
Ë!
EOF
){

35 
i
 = 1; i <
N
; i++){

36 i‡(
	`sˇnf
("%d", 
a
+
i
Ë=
EOF
)

39 
i
 = 0; i < 
M
; i++){

40 i‡(
	`sˇnf
("%¯%d %d", 
C
, &
A
, &
B
Ë=
EOF
)

42 i‡(
C
[0] == 'Q')

43 
	`¥ötf
("%d\n", 
	`s‹t
(
a
, 
A
, 
B
));

44 i‡(
C
[0] == 'U')

45 
a
[
A
] = 
B
;

51 
	}
}

	@C/huawei/8-2.c

26 
	~<°dio.h
>

27 
	~<°rög.h
>

28 
	~<°dlib.h
>

31 
	m«me
[500];

32 
	mcut
[20];

33 
	mrow
;

34 
	mcou¡
;

36 
	mpos
;

37 }
	tRec
;

39 
	$cmp
(c⁄° *
a
, c⁄° *
b
){

40 
Rec
 
x
 = *((Re¯*)
a
);

41 
Rec
 
y
 = *((Re¯*)
b
);

42 
tmp
 = 
	`°rcmp
(
x
.
«me
,
y
.name);

43 i‡–
tmp
 == 0 )

44  
x
.
row
 - 
y
.row;

45  
tmp
;

46 
	}
}

48 
	$cmp2
(c⁄° *
a
, c⁄° *
b
){

49 
Rec
 
x
 = *((Re¯*)
a
);

50 
Rec
 
y
 = *((Re¯*)
b
);

51 
tmp
 = 
y
.
cou¡
 - 
x
.count;

52 i‡–
tmp
 == 0 )

53  
x
.
pos
 - 
y
.pos;

54  
tmp
;

55 
	}
}

57 
	$gë_•lô
(*
d©a
){

58 
i
,
Àn
;

59  
i
 = 
	`°æí
(
d©a
) - 1; i >= 0; i -- ){

60 i‡(
d©a
[
i
] == '\\')

61  
i
;

64 
	}
}

66 
	$maö
(){

67 
∑th
[1000];

68 
row
;

69 
Àn
;

70 
n
,
i
 = 0,
j
 = 0;

71 *
«me
;

72 
Rec
 
d©a
[1000];

73 
Rec
 
ªs
[1000];

74  
	`sˇnf
("%s%d",
∑th
,&
row
Ë!
EOF
 ){

75 
«me
 = 
∑th
 + 
	`gë_•lô
(path) + 1;

76 
	`°r˝y
(
d©a
[
i
].
«me
,name);

77 
Àn
 = 
	`°æí
(
«me
);

78 i‡–
Àn
 > 16 ){

79 
«me
 =Çamê+ (
Àn
 - 16);

81 
	`°r˝y
(
d©a
[
i
].
cut
,
«me
);

82 
d©a
[
i
].
row
 =Ñow;

83 
d©a
[
i
].
cou¡
 = 1;

84 
d©a
[
i
].
pos
 = i;

85 
i
 ++;

87 
n
 = 
i
;

88 
	`qs‹t
(
d©a
,
n
,(
Rec
),
cmp
);

89 
i
 = 
j
 = 0;

90 
ªs
[
j
++] = 
d©a
[
i
++];

91  
i
 < 
n
 ){

92 i‡–
	`°rcmp
(
d©a
[
i
].
«me
,
ªs
[
j
-1].«meË=0 && d©a[i].
row
 ==Ñes[j-1].row ){

93 
ªs
[
j
-1].
cou¡
 ++;

96 
ªs
[
j
++] = 
d©a
[
i
];

98 
i
 ++;

100 
	`qs‹t
(
ªs
,
j
,(
Rec
),
cmp2
);

101 
j
 = j > 8 ? 8 : j;

102  
i
 = 0; i < 
j
; i ++ ){

103 
	`¥ötf
("%†%d %d\n",
ªs
[
i
].
cut
,ªs[i].
row
,ªs[i].
cou¡
);

106 
	}
}

	@C/huawei/LinkList.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	#EÀmTy≥
 

	)

4 
	#Sètus
 

	)

5 
	#OK
 1

	)

6 
	#ERROR
 0

	)

8 
	sLi°


10 
EÀmTy≥
 
	md©a
;

11 
Li°
 *
	m√xt
;

12 }
	tlökli°
;

14 
Sètus
 
	$Cª©eLi°
(
lökli°
 *
L
)

17 
lökli°
 *
p
;

18 
L
->
√xt
 = 
NULL
;

19 
p
 = (
lökli°
 *)
	`mÆloc
((linklist));

20 if(!
p
)

21  
ERROR
;

22 
	`sˇnf
("%d",&
p
->
d©a
);

23 
p
->
d©a
 != 0)

25 
p
->
√xt
 = 
L
->next;

26 
L
->
√xt
 = 
p
;

27 
p
=(
lökli°
 *)
	`mÆloc
((linklist));

28 
	`sˇnf
("%d",&
p
->
d©a
);

31  
OK
;

32 
	}
}

33 
Sètus
 
	$ªvî£
(
lökli°
 *
L
)

36 
lökli°
 *
p
,*
q
;

37 
p
=
L
->
√xt
;

38 
L
->
√xt
=
NULL
;

39 
p
)

41 
q
=
p
;

42 
p
ı->
√xt
;

43 
q
->
√xt
=
L
->next;

44 
L
->
√xt
=
q
;

46  
OK
;

47 
	}
}

48 
Sètus
 
	$li°ö£π
(
lökli°
 *
L
,
i
,
EÀmTy≥
 
e
)

51 
j
;

52 
lökli°
 *
p
,*
q
;

53 
q
=
L
;

54 
p
=(
lökli°
 *)
	`mÆloc
((linklist));

55 if(!
p
)

56  
ERROR
;

57 
p
->
d©a
=
e
;

58 
j
=0;j<
i
-1;++j)

60 
q
=q->
√xt
;

62 
p
->
√xt
=
q
->next;

63 
q
->
√xt
=
p
;

64  
OK
;

65 
	}
}

66 
Sètus
 
	$li°dñ
(
lökli°
 *
L
,
i
,
EÀmTy≥
 *
e
)

69 
j
;

70 
lökli°
 *
p
;

71 
lökli°
 *
q
=÷ökli° *)
	`mÆloc
((linklist));

72 
p
=
L
;

73 
j
=0;j<
i
-1;++j)

75 
p
ı->
√xt
;

77 
q
=
p
->
√xt
;

78 *
e
=
q
->
d©a
;

79 
p
->
√xt
=
q
->next;

80 
q
->
√xt
=
NULL
;

81 
	`‰ì
(
q
);

83  
OK
;

84 
	}
}

86 
lökli°
 *
	$MîgeLi°
(
lökli°
 *
La
,lökli° *
Lb
 )

89 
lökli°
 *
Lc
;

90 
lökli°
 *
∑
,*
pb
,*
pc
;

91 
∑
 = 
La
->
√xt
;

92 
pb
 = 
Lb
->
√xt
;

93 
Lc
 = 
pc
 = 
La
;

94 
∑
 && 
pb
){

95 if(
∑
->
d©a
 <
pb
->data){

96 
pc
->
√xt
 = 
∑
;

97 
pc
 = 
∑
;

98 
∑
 =Öa->
√xt
;

101 
pc
->
√xt
 = 
pb
;

102 
pc
 = 
pb
;

103 
pb
 =Öb->
√xt
;

106 
pc
->
√xt
 = 
∑
 ?Ö®: 
pb
;

107  
Lc
;

108 
	}
}

109 
Sètus
 
	$di•œy
(
lökli°
 *
L
)

111 
lökli°
 *
p
;

112 
p
=
L
->
√xt
;

113 
p
)

115 
	`¥ötf
("%d ",
p
->
d©a
);

116 
p
ı->
√xt
;

118 
	`¥ötf
("\n");

119  
OK
;

120 
	}
}

122 
	$maö
()

124 
i
,
di
;

125 
EÀmTy≥
 
e
,
de
;

127 
lökli°
 *
L
 = (lökli° *)
	`mÆloc
((linklist));

130 
lökli°
 *
La
 = (lökli° *)
	`mÆloc
((linklist));

131 
lökli°
 *
Lb
 = (lökli° *)
	`mÆloc
((linklist));

132 
lökli°
 *
Lc
;

134 if(!
L
)

135  
ERROR
;

136 
	`¥ötf
("Please createáÜinklist La:\n");

137 
	`Cª©eLi°
(
L
);

138 
	`¥ötf
("theÜistáfter create is ;\n");

139 
	`di•œy
(
L
);

140 
	`ªvî£
(
L
);

141 
	`¥ötf
("TheÜistáfterÑeverse is :\n");

142 
	`di•œy
(
L
);

143 
	`¥ötf
("please inputÅhe insertÜo &Élem:\n");

144 
	`sˇnf
("%d%d",&
i
,&
e
);

145 
	`li°ö£π
(
L
,
i
,
e
);

146 
	`¥ötf
("TheÜistáfter insert is ;\n");

147 
	`di•œy
(
L
);

148 
	`¥ötf
("please inputÅhe delÇumber :\n");

149 
	`sˇnf
("%d",&
di
);

150 
	`li°dñ
(
L
,
di
,&
de
);

151 
	`¥ötf
("ThêdñÇum i†%d\n",
de
);

152 
	`¥ötf
("TheÜistáfter del is :\n");

153 
	`di•œy
(
L
);

155 
	`¥ötf
("createÅheÜistÜa:\n");

156 
	`Cª©eLi°
(
La
);

157 
	`ªvî£
(
La
);

158 
	`¥ötf
("createÅheÜistÜb:\n");

159 
	`Cª©eLi°
(
Lb
);

160 
	`ªvî£
(
Lb
);

161 
	`¥ötf
("theÜistáfter merge is :\n");

163 
Lc
=
	`MîgeLi°
(
La
,
Lb
);

164 
	`di•œy
(
Lc
);

165 
	`‰ì
(
L
);‰ì(
La
);‰ì(
Lb
);

167 
	}
}

	@C/huawei/a-b.c

5 
	~<°dio.h
>

6 
	~<°rög.h
>

8 
	$maö
()

10 
öput
[100];

11 
n
, 
i
;

12 
	`gës
(
öput
);

13 
n
 = 
	`°æí
(
öput
);

14 
i
 = 0; i < 
n
; i++){

15 i‡('A' <
öput
[
i
] && input[i] <= 'Z'){

16 i‡(
öput
[
i
] == 'Z')

17 
öput
[
i
] = 'A';

18 
öput
[
i
]++;

20 i‡('a' <
öput
[
i
] && input[i] <= 'z'){

21 i‡(
öput
[
i
] == 'z')

22 
öput
[
i
] = 'a';

24 
öput
[
i
]++;

28 
	`puts
(
öput
);

32 
	}
}

	@C/huawei/bijiao-shuzu.c

1 
	~<°dio.h
>

3 
	$maö
()

5 
m
, 
n
, 
mö
, 
i
, 
cou¡
 = 0;

6 
d©a1
[100], 
d©a2
[100];

7 
	`sˇnf
("%d %d", &
m
, &
n
);

8 i‡(
m
 > 
n
)

9 
mö
 = 
n
;

11 
mö
 = 
m
;

12 
i
 = 0; i < 
m
; i++){

13 
	`sˇnf
("%d", 
d©a1
+
i
);

15 
	`¥ötf
("\n");

16 
i
 = 0; i < 
n
; i++){

17 
	`sˇnf
("%d", 
d©a2
+
i
);

19 
i
 = 
mö
-1; i >= 0; i--){

20 if(
d©a1
[--
m
] !
d©a2
[--
n
])

21 
cou¡
++;

23 
	`¥ötf
("%d\n", 
cou¡
);

25 
	}
}

	@C/huawei/del-same.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 
	$maö
()

7 
a
[100];

8 
	`sˇnf
("%s", 
a
);

11 
	}
}

	@C/huawei/huiwen.c

4 
	~<°dio.h
>

5 
	~<°rög.h
>

7 
	$maö
()

9 
n
, 
i
, 
j
 = 0, 
mid
;

10 
°r
[100];

12 
	`sˇnf
("%s", 
°r
);

13 
n
 = 
	`°æí
(
°r
);

14 
mid
 = 
n
 / 2;

15 
i
 = 
n
-1; i >
mid
; i--){

16 i‡(
°r
[
j
++] !°r[
i
]){

17 
	`¥ötf
("No\n");

22 i‡(
j
 =
i
+1)

23 
	`¥ötf
("Yes\n");

25 
	}
}

	@C/huawei/paixu.c

29 
	~<°dio.h
>

30 
	~<m©h.h
>

31 
	~<°rög.h
>

33 
	#exp
 1e-9

	)

34 
	#MAXN
 1000010

	)

39 
	$In£πS‹t
(
R
[],
n
)

41 
i
,
j
,
tmp
;

42 
i
=2;i<=
n
;i++)

44 
tmp
=
R
[
i
];

45 
j
=
i
-1;

46 
j
>=1 && 
R
[j]>
tmp
)

48 
R
[
j
+1]=R[j];

49 
j
--;

51 
R
[
j
+1]=
tmp
;

53 
	}
}

56 
	$Sñe˘S‹t
(
R
[],
n
)

58 
i
,
j
,
k
,
tmp
;

59 
i
=1;i<=
n
;i++)

61 
k
=
i
;

62 
j
=
i
+1;j<=
n
;j++)

64 if(
R
[
j
]<R[
k
])

66 
k
=
j
;

69 
tmp
=
R
[
i
];

70 
R
[
i
]=R[
k
];

71 
R
[
k
]=
tmp
;

73 
	}
}

76 
	$BubbÀS‹t
(
R
[],
n
)

78 
i
,
j
,
tmp
,
Êag
;

79 
i
=
n
;i>=2;i--)

81 
Êag
=0;

82 
j
=1;j<
i
;j++)

84 if(
R
[
j
]>R[j+1])

86 
tmp
=
R
[
j
];

87 
R
[
j
]=R[j+1];

88 
R
[
j
+1]=
tmp
;

89 
Êag
=1;

92 if(
Êag
==0)

95 
	}
}

98 
	$QuickS‹t
(
s
[], 
°¨t
, 
íd
)

100 
i
, 
j
;

102 
i
 = 
°¨t
;

103 
j
 = 
íd
;

104 
s
[0] = s[
i
];

106 
i
 < 
j
){

107 
i
 < 
j
 && 
s
[0] < s[j])

108 
j
--;

109 i‡(
i
 < 
j
){

110 
s
[
i
] = s[
j
];

111 
i
++;

113 
i
 < 
j
 && 
s
[i] <= s[0])

114 
i
++;

115 i‡(
i
 < 
j
){

116 
s
[
j
] = s[
i
];

117 
j
--;

120 
s
[
i
] = s[0];

122 i‡(
°¨t
 < 
i
)

123 
	`QuickS‹t
(
s
, 
°¨t
, 
j
 - 1);

124 i‡(
i
 < 
íd
)

125 
	`QuickS‹t
(
s
, 
j
 + 1, 
íd
);

126 
	}
}

129 
	$Shs‹t
(
s
[], 
n
)

131 
i
, 
j
, 
d
;

132 
d
 = 
n
 / 2;

133 
d
 >= 1){

134 
i
 = 
d
 + 1; i <=
n
; i++){

135 
s
[0] = s[
i
];

136 
j
 = 
i
 - 
d
;

137 (
j
 > 0Ë&& (
s
[0] < s[j])){

138 
s
[
j
+
d
] = s[j];

139 
j
 = j - 
d
;

141 
s
[
j
+
d
] = s[0];

143 
d
 = d / 2;

145 
	}
}

150 
	$Si·
(
R
[],
low
,
high
)

152 
i
=
low
,
j
=2*i;

153 
tmp
=
R
[
i
];

154 
j
<=
high
)

156 if(
j
<
high
 && 
R
[j]<R[j+1])

158 ++
j
;

160 if(
tmp
<
R
[
j
])

162 
R
[
i
]=R[
j
];

163 
i
=
j
;

164 
j
=2*
i
;

169 
R
[
i
]=
tmp
;

170 
	}
}

172 
	$hópS‹t
(
R
[],
n
)

174 
i
;

175 
tmp
;

176 
i
=
n
/2;i>=1;--i)

178 
	`Si·
(
R
,
i
,
n
);

180 
i
=
n
;i>=2;--i)

182 
tmp
=
R
[1];

183 
R
[1]=R[
i
];

184 
R
[
i
]=
tmp
;

185 
	`Si·
(
R
,1,
i
-1);

187 
	}
}

190 
	#N
 100010

	)

191 
	gtmp
[
N
],
	gR
[N];

192 
	g™s
=0;

193 
	$Mîge
(
l
,
m
,
r
)

195 
i
=
l
;

196 
j
=
m
+1;

197 
k
=
l
;

199 
i
<=
m
 && 
j
<=
r
)

201 if(
R
[
i
]>R[
j
])

203 
tmp
[
k
++]=
R
[
j
++];

204 
™s
+
m
-
i
+
l
;

208 
tmp
[
k
++]=
R
[
i
++];

211 
i
<=
m
)

212 
tmp
[
k
++]=
R
[
i
++];

213 
j
<=
r
)

214 
tmp
[
k
++]=
R
[
j
++];

215 
i
=
l
;i<=
r
;i++)

217 
R
[
i
]=
tmp
[i];

219 
	}
}

221 
	$MîgeS‹t
(
l
,
r
)

223 if(
l
<
r
)

225 
m
=(
l
+
r
)>>1;

226 
	`MîgeS‹t
(
l
,
m
);

227 
	`MîgeS‹t
(
m
+1,
r
);

228 
	`Mîge
(
l
,
m
,
r
);

230 
	}
}

232 
	$maö
()

235 
Àn
,
i
;

236 
	`sˇnf
("%d",&
Àn
)!=
EOF
)

238 
i
=1;i<=
Àn
;i++)

240 
	`sˇnf
("%d",&
R
[
i
]);

246 
	`Shs‹t
(
R
, 
Àn
);

249 
i
=1;i<=
Àn
;i++)

251 
	`¥ötf
("%d ",
R
[
i
]);

253 
	`¥ötf
("\n");

256 
	}
}

	@C/huawei/same.c

6 
	~<°dio.h
>

7 
	~<°rög.h
>

9 
	$maö
()

11 
i
, 
j
, 
n
, 
check
 = 0;

12 
d©a
[100];

14 
	`sˇnf
("%s", 
d©a
);

15 
n
 = 
	`°æí
(
d©a
);

16 
i
 = 0; i < 
n
 - 3; i++){

17 
j
 = 
i
+2; j < 
n
; j++){

18 if(
d©a
[
i
] =d©a[
j
]){

19 i‡(
d©a
[
i
+1] =d©a[
j
+1]){

20 
check
 = 1;

21 
	`¥ötf
("Yes\n");

26 i‡(
check
 == 1)

29 i‡(
check
 == 0)

30 
	`¥ötf
("No\n");

35 
	}
}

	@C/huawei/strx.c

5 
	~<°dio.h
>

6 
	~<°rög.h
>

7 
	~<°dlib.h
>

9 
	$maö
()

11 
a
[100], 
b
[100];

12 
A
 = 0, 
B
 = 0, 
i
 = 0, 
l
, 
n
;

13 
	`sˇnf
("%s", 
a
);

14 
	`sˇnf
("%s", 
b
);

15 
A
 = 
	`©oi
(
a
Ë*átoi(
b
);

16 
	`¥ötf
("%d\n", 
A
);

18 
a
[
i
] = 
A
 % 10;

19 
A
 = A / 10;

20 i‡(
A
 == 0){

23 
i
++;

25 
l
 = 
i
;Ü >= 0;Ü--){

26 
b
[
i
-
l
] = 
a
[l];

27 
	`¥ötf
("%c",
a
[
l
]);

29 
	`¥ötf
("\n");

31 
	}
}

	@C/huawei/yueshefuhuan.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~<°dlib.h
>

5 
	#N
 9

	)

6 
	#ERROR
 0

	)

7 
	#OK
 1

	)

8 
	gkeyW
[
N
] = {1, 2, 3, 4, 5, 6, 7, 8, 9};

10 
	sLNode
{

11 
	md©a
;

12 
LNode
 *
	m√xt
;

13 } 
	tLNode
;

14 
LNode
 *
	tLökLi°
;

16 
	$Jo£ph
(
LökLi°
 
p
, 
m
, 
x
)

18 
LökLi°
 
q
;

19 
i
;

20 i‡(
x
 == 0)

22 
q
 = 
p
;

23 
m
 %
x
;

24 i‡(
m
 == 0)

25 
m
 = 
x
;

26 
i
 = 1; i <
m
; i++){

27 
p
 = 
q
;

28 
q
 = 
p
->
√xt
;

30 
p
->
√xt
 = 
q
->next;

31 
i
 = 
q
->
d©a
;

32 
	`¥ötf
("%d ", 
q
->
d©a
);

33 
	`‰ì
(
q
);

34 
	`Jo£ph
(
p
, 
i
, 
x
 - 1);

36 
	}
}

38 
	$maö
()

40 
i
, 
m
;

41 
LökLi°
 
Lhód
, 
p
, 
q
;

42 
Lhód
 = (
LökLi°
)
	`mÆloc
((
LNode
));

43 i‡(!
Lhód
)

44  
ERROR
;

45 
Lhód
->
d©a
 = 
keyW
[0];

46 
Lhód
->
√xt
 = 
NULL
;

47 
p
 = 
Lhód
;

49 
i
 = 1; i < 9; i++){

50 i‡(!(
q
 = (
LökLi°
)
	`mÆloc
((
LNode
))))

51  
ERROR
;

52 
q
->
d©a
 = 
keyW
[
i
];

53 
p
->
√xt
 = 
q
;

54 
p
 = 
q
;

56 
p
->
√xt
 = 
Lhód
;

57 
	`¥ötf
("please inputáÇumber m: \n");

58 
	`sˇnf
("%d", &
m
);

59 
	`¥ötf
("outputÅhe queue:\n");

60 
	`Jo£ph
(
p
, 
m
, 
N
);

61 
	`¥ötf
("\n");

63 
	}
}

	@C/kuaishupaixu.c

28 
	~<°dio.h
>

30 
	$qus‹t
(
s
[], 
°¨t
, 
íd
)

32 
i
, 
j
;

34 
i
 = 
°¨t
;

35 
j
 = 
íd
;

36 
s
[0] = s[
i
];

38 
i
 < 
j
){

39 
i
 < 
j
 && 
s
[0] < s[j])

40 
j
--;

41 i‡(
i
 < 
j
){

42 
s
[
i
] = s[
j
];

43 
i
++;

45 
i
 < 
j
 && 
s
[i] <= s[0])

46 
i
++;

47 i‡(
i
 < 
j
){

48 
s
[
j
] = s[
i
];

49 
j
--;

52 
s
[
i
] = s[0];

54 i‡(
°¨t
 < 
i
)

55 
	`qus‹t
(
s
, 
°¨t
, 
j
 - 1);

56 i‡(
i
 < 
íd
)

57 
	`qus‹t
(
s
, 
j
 + 1, 
íd
);

58 
	}
}

60 
	$maö
()

62 
a
[11], 
i
;

63 
	`¥ötf
("input 10Çumbers : \n");

64 
i
 = 1; i <= 10; i++)

65 
	`sˇnf
("%d", &
a
[
i
]);

67 
	`qus‹t
(
a
, 1,10);

69 
	`¥ötf
("After 10Çumbers: \n");

70 
i
 = 1; i <= 10; i++)

71 
	`¥ötf
("%5d",
a
[
i
]);

73 
	`¥ötf
("\n");

74 
	}
}

	@C/light.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
a
[10]={-1};

14 
i
 = 1; i <= 10; i++)

16 
j
 = 1; j <= 10; j++)

18 
k
 = 
i
;

19 
k
 <= 10){

20 
a
[
k
] = -a[k];

21 
k
 = k * 
j
;

26 
	`¥ötf
("Á¨¨%d‰∏™Â≠©Â≠êÊãâÁÅØ\n",
i
);

29 
l
 = 1;Ü <= 10;Ü++)

31 i‡(
a
[
l
] == 1)

32 
	`¥ötf
("%d ", 
l
);

35 
	`¥ötf
("\n");

38 
	}
}

	@C/maopao.c

20 
	~<°dio.h
>

22 
	$£quí˚
(
b
[], 
n
)

24 
i
, 
j
, 
ãmp
;

26 
i
 = 0; i < 
n
; i++)

28 
j
 = 
i
 + 1; j < 
n
; j++)

30 i‡(
b
[
i
] < b[
j
])

32 
ãmp
 = 
b
[
j
];

33 
b
[
j
] = b[
i
];

34 
b
[
i
] = 
ãmp
;

39 
	}
}

42 
	$maö
()

44 
a
[5],
i
 = 0;

46 
i
 < 5)

48 
	`sˇnf
("%d", &
a
[
i
]);

49 
i
++;

52 
	`¥ötf
("Before sequence:\n");

53 
i
 = 0; i < 5; i++ )

55 
	`¥ötf
("a[%d] = %d ", 
i
, 
a
[i]);

57 
	`¥ötf
("\n");

59 
	`£quí˚
(
a
, 5);

61 
	`¥ötf
("After sequence:\n");

62 
i
 = 0;

64 
	`¥ötf
("a[%d] = %d ", 
i
, 
a
[i]);

65 
i
++;

66 }
i
 < 5);

70 
	}
}

	@C/movezones.c

8 
	~<°dio.h
>

11 
	$maö
()

13 
i
, 
j
, 
n
 = 0;

14 
a
[5] = {0,1,23,0,9};

16 
i
 = 0; i < 5; i++){

17 i‡(
a
[
i
] == 0){

18 
n
++;

20 
j
 = 
i
; j < 5; j++){

21 
a
[
j
] =á[j+1];

25 
i
 = 4; i >5 - 
n
; i--)

26 
a
[
i
] = 0;

28 
i
 = 0; i < 5; i++){

29 
	`¥ötf
(" %d ", 
a
[
i
]);

31 
	`¥ötf
("\n");

32 
	}
}

	@C/nikeqieshi.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
i
, 
j
, 
k
 = 0, 
l
, 
n
, 
m
, 
sum
, 
Êag
 = 1;

13 
	`¥ötf
("please inputánÇumber: \n");

14 
	`sˇnf
("%d", &
n
);

15 
m
 = 
n
 *Ç *Ç;

16 
i
 = 
m
 / 2;

17 i‡(
i
 % 2 == 0)

18 
i
 = i + 1;

19 
Êag
 =1 && 
i
 >= 1){

20 
sum
 = 0;

21 
k
 = 0;

23 
sum
 +(
i
 - 2 * 
k
);

24 
k
++;

25 i‡(
sum
 =
m
){

26 
	`¥ötf
("%d*%d*%d=%d=", 
n
,Ç,Ç, 
m
);

27 
l
 = 0;Ü < 
k
 - 1;Ü++)

28 
	`¥ötf
("%d+", 
i
 - 1 * 2);

29 
	`¥ötf
("%d\n", 
i
 - (
k
 - 1) * 2);

30 
Êag
 = 0;

33 i‡(
sum
 > 
m
)

37 
i
 -= 2;

39 
	}
}

	@C/pinduoduo/p1.c

8 
	~<°dio.h
>

9 
	$s‹t
(
s
[], 
n
)

11 
i
, 
j
, 
d
;

12 
d
 = 
n
 / 2;

13 
d
 >= 1){

14 
i
 = 
d
+1; i <=
n
; i++){

15 
s
[0] = s[
i
];

16 
j
 = 
i
 - 
d
;

17 (
j
 > 0Ë&& (
s
[0] < s[j])){

18 
s
[
j
+
d
] = s[j];

19 
j
 = j - 
d
;

21 
s
[
j
+
d
] = s[0];

23 
d
 = d / 2;

26 
	}
}

28 
	$maö
()

30 
n
, 
A
[1024];

31 
i
, 
max1
, 
max2
;

33 
	`sˇnf
("%d", &
n
Ë!
EOF
){

34 
i
 = 1; i <
n
; i++){

35 
	`sˇnf
("%d",
A
+
i
);

37 
	`s‹t
(
A
, 
n
);

38 
max1
 = 
A
[
n
] * A[n-1] * A[n-2];

39 
max2
 = 
A
[1] * A[2] * A[
n
];

40 i‡–
max1
 > 0 || 
max2
 > 0)

41 { if(
max1
 > 
max2
)

42 
	`¥ötf
("%d\n", 
max1
);

44 
	`¥ötf
("%d\n", 
max2
);

47 
	`¥ötf
("0\n");

50 
	}
}

	@C/pinduoduo/p3.c

1 
	~<°dio.h
>

3 
	$s‹t
(
s
[], 
n
)

5 
i
, 
j
, 
d
;

6 
d
 = 
n
 / 2;

7 
d
 >= 1){

8 
i
 = 
d
+1; i <=
n
; i++){

9 
s
[0] = s[
i
];

10 
j
 = 
i
 - 
d
;

11 (
j
 > 0Ë&& (
s
[0] < s[j])){

12 
s
[
j
+
d
] = s[j];

13 
j
 = j - 
d
;

15 
s
[
j
+
d
] = s[0];

17 
d
 = d / 2;

20 
	}
}

22 
	$maö
()

24 
n
, 
m
, 
i
, 
j
, 
h
[1024], 
w
[1024];

25 
cou¡
;

26 
	`sˇnf
("%d", &
n
Ë!
EOF
){

27 
cou¡
 = 0;

28 
i
 = 1; i <
n
; i++){

29 
	`sˇnf
("%d",
h
+
i
);

31 
	`s‹t
(
h
, 
n
);

33 
	`sˇnf
("%d", &
m
);

34 
j
 = 1; j <
m
; j++){

35 
	`sˇnf
("%d",
w
+
j
);

37 
	`s‹t
(
w
, 
m
);

38 
j
 = 
m
; j > 0; j--){

39 
i
 = 
n
; i > 0; i--){

40 i‡(
w
[
j
] >
h
[
i
]){

41 
cou¡
++;

42 
h
[
i
] = 
w
[
m
] + 1;

47 
	`¥ötf
("%d\n", 
cou¡
);

51 
	}
}

	@C/scheduler_test.c

1 
	~<sched.h
>

2 
	~<°dlib.h
>

3 
	~<°dio.h
>

4 
	~<î∫o.h
>

6 
	#DEATH
(
mess
Ë{ 
	`≥º‹
(mess); 
	`exô
(
î∫o
); }

	)

8 
	$¥öçﬁicy
 (
pﬁicy
)

13 i‡(
pﬁicy
 =
SCHED_OTHER
)

14 
	`¥ötf
 ("pﬁicy = SCHED_OTHER = %d\n", 
pﬁicy
);

15 i‡(
pﬁicy
 =
SCHED_FIFO
)

16 
	`¥ötf
 ("pﬁicy = SCHED_FIFO = %d\n", 
pﬁicy
);

17 i‡(
pﬁicy
 =
SCHED_RR
)

18 
	`¥ötf
 ("pﬁicy = SCHED_RR = %d\n", 
pﬁicy
);

19 
	}
}

21 
	$maö
 (
¨gc
, **
¨gv
)

23 
pﬁicy
;

24 
sched_∑øm
 
p
;

28 
pﬁicy
 = 
	`sched_gëscheduÀr
 (0);

29 
	`¥öçﬁicy
 (
pﬁicy
);

33 
	`¥ötf
 ("\nTrying sched_setscheduler...\n");

34 
pﬁicy
 = 
SCHED_FIFO
;

35 
	`¥öçﬁicy
 (
pﬁicy
);

36 
p
.
sched_¥i‹ôy
 = 50;

38 i‡(
	`sched_£tscheduÀr
 (0, 
pﬁicy
, &
p
))

39 
	`DEATH
 ("sched_setscheduler:");

40 
	`¥ötf
 ("p.sched_¥i‹ôy = %d\n", 
p
.
sched_¥i‹ôy
);

41 
	`exô
 (0);

42 
	}
}

	@C/shunxunbiaocharu.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<°dlib.h
>

11 
	#Li°size
 100

	)

13 
	ssqli°


15 
	md©a
[
Li°size
];

16 
	mÀngth
;

20 
	$In£πLi°
(
sqli°
 *
l
, 
t
, 
i
)

22 
j
;

23 i‡(
i
 < 0 || i > 
l
->
Àngth
){

24 
	`¥ötf
("adress is wrong\n");

25 
	`exô
(1);

27 i‡(
l
->
Àngth
 >
Li°size
){

28 
	`¥ötf
("big\n");

29 
	`exô
(1);

31 
j
 = 
l
->
Àngth
 - 1; j >
i
; j--)

32 
l
->
d©a
[
j
 + 1] =Ü->data[j];

33 
l
->
d©a
[
i
] = 
t
;

34 
l
->
Àngth
++;

35 
	}
}

37 
	$maö
()

39 
sqli°
 *
sq
;

40 
i
, 
n
, 
t
;

41 
sq
 = (
sqli°
 *)
	`mÆloc
((sqlist));

42 
sq
->
Àngth
 = 0;

43 
	`¥ötf
("please inputÅhe size ofÜink:\n");

44 
i
 = 0; i < 
n
; i++){

45 
	`sˇnf
("%d", &
t
);

46 
	`In£πLi°
(
sq
, 
t
, 
i
);

48 
	`¥ötf
("nowÅheÜink is :\n");

49 
i
 = 0; i < 
sq
->
Àngth
; i++){

50 
	`¥ötf
("%d", 
sq
->
d©a
[
i
]);

52 
	`gëch
();

53 
	}
}

	@C/test.cpp

8 
	~<°dio.h
>

10 
«me•a˚
 
	gmy«me


12 
	gv¨
 = 42;

14 "C" 
_ZN6my«me3v¨E
;

16 
	$maö
()

18 
	`¥ötf
("%d\n",
_ZN6my«me3v¨E
);

20 
	}
}

	@C/testxier.c

8 
	~<°dio.h
>

10 
	$£quí˚
(
b
[], 
n
)

12 
d
, 
j
, 
i
;

13 
d
 = 
n
 / 2;

15 
d
 > 0)

17 
i
 = 
d
 + 1; i <
n
; i++)

19 
b
[0] = b[
i
];

20 
j
 = 
i
 - 
d
;

21 i‡(
j
 > 0 && 
b
[0] < b[j])

23 
b
[
i
] = b[
j
];

24 
b
[
j
] = b[0];

27 
d
 = d / 2;

31 
	}
}

33 
	$maö
()

35 
a
[6],
i
 = 1;

37 
i
 < 6)

39 
	`sˇnf
("%d", &
a
[
i
]);

40 
i
++;

43 
	`¥ötf
("Before sequence:\n");

44 
i
 = 1; i < 6; i++ )

46 
	`¥ötf
("a[%d] = %d ", 
i
, 
a
[i]);

48 
	`¥ötf
("\n");

50 
	`£quí˚
(
a
, 5);

52 
	`¥ötf
("After sequence:\n");

53 
i
 = 1;

55 
	`¥ötf
("a[%d] = %d ", 
i
, 
a
[i]);

56 
i
++;

57 }
i
 < 6);

61 
	}
}

	@C/tryhelloworld.c

1 *
	g°r
 = "hello world\n";

2 
	$¥öt
()

4 
	`asm
("movl $13, %%edx \n\t"

9 ::"r"(
°r
):"edx","ecx","ebx");

11 
	}
}

12 
	$exô
()

14 
	`asm
("movl $42, %ebx \n\t"

19 
	}
}

20 
	$nomaö
()

22 
	`¥öt
();

23 
	`exô
();

24 
	}
}

	@C/xierpaixu.c

23 
	~<°dio.h
>

25 
	$shs‹t
(
s
[], 
n
)

27 
i
, 
j
, 
d
;

28 
d
 = 
n
 / 2;

29 
d
 >= 1)

31 
i
 = 
d
 + 1; i <
n
; i++)

33 
s
[0] = s[
i
];

34 
j
 = 
i
 - 
d
;

35 (
j
 > 0Ë&& (
s
[0] < s[j]))

37 
s
[
j
 + 
d
] = s[j];

38 
j
 = j - 
d
;

40 
s
[
j
 + 
d
] = s[0];

42 
d
 = d / 2;

44 
	}
}

46 
	$maö
()

48 
i
, 
a
[11];

49 
	`¥ötf
("ËØ∑ËæìÂÖ•10‰∏™Êï∞ÊçÆÔºö\n");

50 
i
 = 1; i <= 10; i++)

51 
	`sˇnf
("%d",&
a
[
i
]);

52 
	`shs‹t
(
a
, 10);

53 
	`¥ötf
("ÊéíÂ∫èÂêéÁöÑÈ°∫Â∫èÊòØÔºö\n");

54 
i
 = 1; i <= 10; i++)

55 
	`¥ötf
("%5d",
a
[
i
]);

56 
	`¥ötf
("\n");

58 
	}
}

	@C/xuanzhepaixu.c

9 
	~<°dio.h
>

11 
	$£quí˚
(
a
[], 
n
)

13 
i
, 
j
, 
t
;

15 
i
 = 1; i < 
n
; i++){

16 
j
 = 
i
 + 1; j < 
n
; j++){

17 i‡(
a
[
i
] >á[
j
]){

18 
t
 = 
a
[
i
];

19 
a
[
i
] =á[
j
];

20 
a
[
j
] = 
t
;

24 
	}
}

26 
	$maö
()

28 
a
[6],
i
 = 1;

30 
i
 < 6){

31 
	`sˇnf
("%d", &
a
[
i
]);

32 
i
++;

35 
	`¥ötf
("Before sequence:\n");

36 
i
 = 1; i < 6; i++ ) {

37 
	`¥ötf
("a[%d] = %d ", 
i
, 
a
[i]);

39 
	`¥ötf
("\n");

41 
	`£quí˚
(
a
, 6);

43 
	`¥ötf
("After sequence:\n");

44 
i
 = 1;

46 
	`¥ötf
("a[%d] = %d ", 
i
, 
a
[i]);

47 
i
++;

48 }
i
 < 6);

52 
	}
}

	@C/yueshefuhuan.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	#N
 9

	)

11 
	#OVERFLOW
 0

	)

12 
	#OK
 1

	)

14 
	gKeyW
[
N
] = {4, 7, 5, 9, 3, 2, 6, 1, 8};

16 
	sLNode
{

17 
	mkeyw‹d
;

18 
LNode
 *
	m√xt
;

19 }
	tLNode
, *
	tLökLi°
;

21 
	$Jo£ph
(
LökLi°
 
p
, 
m
, 
x
)

23 
LökLi°
 
q
;

24 
i
;

25 i‡(
x
 == 0)

27 
q
 = 
p
;

28 
m
 %
x
;

29 i‡(
m
 == 0)

30 
m
 = 
x
;

31 
i
 = 1; i <
m
; i++){

32 
p
 = 
q
;

33 
q
 = 
p
->
√xt
;

35 
p
->
√xt
 = 
q
->next;

36 
i
 = 
q
->
keyw‹d
;

37 
	`¥ötf
("%d", 
q
->
keyw‹d
);

38 
	`‰ì
(
q
);

39 
	`Jo£ph
(
p
, 
i
, 
x
 - 1);

40 
	}
}

42 
	$maö
()

44 
i
, 
m
;

45 
LökLi°
 
Lhód
, 
p
, 
q
;

46 
Lhód
 = (
LökLi°
)
	`mÆloc
((
LNode
));

47 i‡(!
Lhód
)

48  
OVERFLOW
;

49 
Lhód
->
keyw‹d
 = 
KeyW
[0];

50 
Lhód
->
√xt
 = 
NULL
;

51 
p
 = 
Lhód
;

53 
i
 = 1; i < 9; i++){

54 i‡(!(
q
 = (
LökLi°
)
	`mÆloc
((
LNode
))))

55  
OVERFLOW
;

56 
q
->
keyw‹d
 = 
KeyW
[
i
];

57 
p
->
√xt
 = 
q
;

58 
p
 = 
q
;

60 
p
->
√xt
 = 
Lhód
;

61 
	`¥ötf
("please inputáÇumber m: \n");

62 
	`sˇnf
("%d", &
m
);

63 
	`¥ötf
("outputÅhe queue: \n");

64 
	`Jo£ph
(
p
, 
m
, 
N
);

65 
	`gëch
();

67  
OK
;

68 
	}
}

	@C/zhiJieChaRu.c

8 
	~<°dio.h
>

10 
	$ös‹t
(
s
[], 
n
)

12 
i
, 
j
;

13 
i
 = 2; i < 
n
; i++)

15 
s
[0] = s[
i
];

16 
j
 = 
i
 - 1;

17 
s
[0] < s[
j
])

19 
s
[
j
+1] = s[j];

20 
j
--;

22 
s
[
j
+1] = s[0];

24 
	}
}

26 
	$maö
()

28 
i
, 
a
[11];

29 
	`¥ötf
("ËØ∑ËæìÂÖ•10‰∏™Êï∞ÊçÆÔºö\n");

30 
i
 = 1; i <= 10; i++)

31 
	`sˇnf
("%d",&
a
[
i
]);

32 
	`ös‹t
(
a
, 10);

33 
	`¥ötf
("ÊéíÂ∫èÂêéÁöÑÈ°∫Â∫èÊòØÔºö\n");

34 
i
 = 1; i <= 10; i++)

35 
	`¥ötf
("%5d",
a
[
i
]);

36 
	`¥ötf
("\n");

38 
	}
}

	@C/Á∫¢ÈªëÊ†ë.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 
	tkey_t
;

6 
	td©a_t
;

8 
	ecﬁ‹_t


10 
	mRED
 = 0,

11 
	mBLACK
 = 1

12 }
	tcﬁ‹_t
;

14 
	srb_node_t


16 
rb_node_t
 *
	mÀ·
, *
	mright
, *
	m∑ª¡
;

17 
key_t
 
	mkey
;

18 
d©a_t
 
	md©a
;

19 
cﬁ‹_t
 
	mcﬁ‹
;

20 }
	trb_node_t
;

23 
rb_node_t
* 
rb_ö£π
(
key_t
 
key
, 
d©a_t
 
d©a
,Ñb_node_t* 
roŸ
);

24 
rb_node_t
* 
rb_£¨ch
(
key_t
 
key
,Ñb_node_t* 
roŸ
);

25 
rb_node_t
* 
rb_îa£
(
key_t
 
key
,Ñb_node_t* 
roŸ
);

27 
	$maö
()

29 
i
, 
cou¡
 = 9;

30 
key_t
 
key
;

31 
rb_node_t
* 
roŸ
 = 
NULL
, *
node
 = NULL;

33 
	`§™d
(
	`time
(
NULL
));

34 
i
 = 1; i < 
cou¡
; ++i)

36 
key
 = 
	`ønd
(Ë% 
cou¡
;

37 i‡((
roŸ
 = 
	`rb_ö£π
(
key
, 
i
,Ñoot)))

39 
	`¥ötf
("[ò%d] in£π key %d suc˚ss!\n", 
i
, 
key
);

43 
	`¥ötf
("[ò%d] in£π key %dÉº‹!\n", 
i
, 
key
);

44 
	`exô
(-1);

47 i‡((
node
 = 
	`rb_£¨ch
(
key
, 
roŸ
)))

49 
	`¥ötf
("[ò%d] sórch key %d suc˚ss!\n", 
i
, 
key
);

53 
	`¥ötf
("[ò%d] sórch key %dÉº‹!\n", 
i
, 
key
);

54 
	`exô
(-1);

56 i‡(!(
i
 % 10))

58 i‡((
roŸ
 = 
	`rb_îa£
(
key
,Ñoot)))

60 
	`¥ötf
("[ò%d]Éø£ key %d suc˚ss\n", 
i
, 
key
);

64 
	`¥ötf
("[ò%d]Éø£ key %dÉº‹\n", 
i
, 
key
);

70 
	}
}

72 
rb_node_t
* 
	$rb_√w_node
(
key_t
 
key
, 
d©a_t
 
d©a
)

74 
rb_node_t
 *
node
 = (rb_node_t*)
	`mÆloc
((rb_node_t));

76 i‡(!
node
)

78 
	`¥ötf
("mallocÉrror!\n");

79 
	`exô
(-1);

81 
node
->
key
 = key,Çode->
d©a
 = data;

83  
node
;

84 
	}
}

93 
rb_node_t
* 
	$rb_rŸ©e_À·
(
rb_node_t
* 
node
,Ñb_node_t* 
roŸ
)

95 
rb_node_t
* 
right
 = 
node
->right;

97 i‡((
node
->
right
 =Ñight->
À·
))

99 
right
->
À·
->
∑ª¡
 = 
node
;

101 
right
->
À·
 = 
node
;

103 i‡((
right
->
∑ª¡
 = 
node
->parent))

105 i‡(
node
 =node->
∑ª¡
->
right
)

107 
node
->
∑ª¡
->
right
 =Ñight;

111 
node
->
∑ª¡
->
À·
 = 
right
;

116 
roŸ
 = 
right
;

118 
node
->
∑ª¡
 = 
right
;

120  
roŸ
;

121 
	}
}

130 
rb_node_t
* 
	$rb_rŸ©e_right
(
rb_node_t
* 
node
,Ñb_node_t* 
roŸ
)

132 
rb_node_t
* 
À·
 = 
node
->left;

134 i‡((
node
->
À·
 =Üe·->
right
))

136 
À·
->
right
->
∑ª¡
 = 
node
;

138 
À·
->
right
 = 
node
;

140 i‡((
À·
->
∑ª¡
 = 
node
->parent))

142 i‡(
node
 =node->
∑ª¡
->
right
)

144 
node
->
∑ª¡
->
right
 = 
À·
;

148 
node
->
∑ª¡
->
À·
 =Üeft;

153 
roŸ
 = 
À·
;

155 
node
->
∑ª¡
 = 
À·
;

157  
roŸ
;

158 
	}
}

160 
rb_node_t
* 
	$rb_ö£π_ªbÆ™˚
(
rb_node_t
 *
node
,Ñb_node_à*
roŸ
)

162 
rb_node_t
 *
∑ª¡
, *
g∑ª¡
, *
un˛e
, *
tmp
;

164 (
∑ª¡
 = 
node
->∑ª¡Ë&&Ö¨ít->
cﬁ‹
 =
RED
)

166 
g∑ª¡
 = 
∑ª¡
->parent;

168 i‡(
∑ª¡
 =
g∑ª¡
->
À·
)

170 
un˛e
 = 
g∑ª¡
->
right
;

171 i‡(
un˛e
 && un˛e->
cﬁ‹
 =
RED
)

173 
un˛e
->
cﬁ‹
 = 
BLACK
;

174 
∑ª¡
->
cﬁ‹
 = 
BLACK
;

175 
g∑ª¡
->
cﬁ‹
 = 
RED
;

176 
node
 = 
g∑ª¡
;

180 i‡(
∑ª¡
->
right
 =
node
)

182 
roŸ
 = 
	`rb_rŸ©e_À·
(
∑ª¡
,Ñoot);

183 
tmp
 = 
∑ª¡
;

184 
∑ª¡
 = 
node
;

185 
node
 = 
tmp
;

188 
∑ª¡
->
cﬁ‹
 = 
BLACK
;

189 
g∑ª¡
->
cﬁ‹
 = 
RED
;

190 
roŸ
 = 
	`rb_rŸ©e_right
(
g∑ª¡
,Ñoot);

195 
un˛e
 = 
g∑ª¡
->
À·
;

196 i‡(
un˛e
 && un˛e->
cﬁ‹
 =
RED
)

198 
un˛e
->
cﬁ‹
 = 
BLACK
;

199 
∑ª¡
->
cﬁ‹
 = 
BLACK
;

200 
g∑ª¡
->
cﬁ‹
 = 
RED
;

201 
node
 = 
g∑ª¡
;

205 i‡(
∑ª¡
->
À·
 =
node
)

207 
roŸ
 = 
	`rb_rŸ©e_right
(
∑ª¡
,Ñoot);

208 
tmp
 = 
∑ª¡
;

209 
∑ª¡
 = 
node
;

210 
node
 = 
tmp
;

213 
∑ª¡
->
cﬁ‹
 = 
BLACK
;

214 
g∑ª¡
->
cﬁ‹
 = 
RED
;

215 
roŸ
 = 
	`rb_rŸ©e_À·
(
g∑ª¡
,Ñoot);

220 
roŸ
->
cﬁ‹
 = 
BLACK
;

222  
roŸ
;

223 
	}
}

225 
rb_node_t
* 
	$rb_îa£_ªbÆ™˚
(
rb_node_t
 *
node
,Ñb_node_à*
∑ª¡
,Ñb_node_à*
roŸ
)

227 
rb_node_t
 *
Ÿhî
, *
o_À·
, *
o_right
;

229 (!
node
 ||Çode->
cﬁ‹
 =
BLACK
Ë&&Çodê!
roŸ
)

231 i‡(
∑ª¡
->
À·
 =
node
)

233 
Ÿhî
 = 
∑ª¡
->
right
;

234 i‡(
Ÿhî
->
cﬁ‹
 =
RED
)

236 
Ÿhî
->
cﬁ‹
 = 
BLACK
;

237 
∑ª¡
->
cﬁ‹
 = 
RED
;

238 
roŸ
 = 
	`rb_rŸ©e_À·
(
∑ª¡
,Ñoot);

239 
Ÿhî
 = 
∑ª¡
->
right
;

241 i‡((!
Ÿhî
->
À·
 || othî->À·->
cﬁ‹
 =
BLACK
) &&

242 (!
Ÿhî
->
right
 || othî->right->
cﬁ‹
 =
BLACK
))

244 
Ÿhî
->
cﬁ‹
 = 
RED
;

245 
node
 = 
∑ª¡
;

246 
∑ª¡
 = 
node
->parent;

250 i‡(!
Ÿhî
->
right
 || othî->right->
cﬁ‹
 =
BLACK
)

252 i‡((
o_À·
 = 
Ÿhî
->
À·
))

254 
o_À·
->
cﬁ‹
 = 
BLACK
;

256 
Ÿhî
->
cﬁ‹
 = 
RED
;

257 
roŸ
 = 
	`rb_rŸ©e_right
(
Ÿhî
,Ñoot);

258 
Ÿhî
 = 
∑ª¡
->
right
;

260 
Ÿhî
->
cﬁ‹
 = 
∑ª¡
->color;

261 
∑ª¡
->
cﬁ‹
 = 
BLACK
;

262 i‡(
Ÿhî
->
right
)

264 
Ÿhî
->
right
->
cﬁ‹
 = 
BLACK
;

266 
roŸ
 = 
	`rb_rŸ©e_À·
(
∑ª¡
,Ñoot);

267 
node
 = 
roŸ
;

273 
Ÿhî
 = 
∑ª¡
->
À·
;

274 i‡(
Ÿhî
->
cﬁ‹
 =
RED
)

276 
Ÿhî
->
cﬁ‹
 = 
BLACK
;

277 
∑ª¡
->
cﬁ‹
 = 
RED
;

278 
roŸ
 = 
	`rb_rŸ©e_right
(
∑ª¡
,Ñoot);

279 
Ÿhî
 = 
∑ª¡
->
À·
;

281 i‡((!
Ÿhî
->
À·
 || othî->À·->
cﬁ‹
 =
BLACK
) &&

282 (!
Ÿhî
->
right
 || othî->right->
cﬁ‹
 =
BLACK
))

284 
Ÿhî
->
cﬁ‹
 = 
RED
;

285 
node
 = 
∑ª¡
;

286 
∑ª¡
 = 
node
->parent;

290 i‡(!
Ÿhî
->
À·
 || othî->À·->
cﬁ‹
 =
BLACK
)

292 i‡((
o_right
 = 
Ÿhî
->
right
))

294 
o_right
->
cﬁ‹
 = 
BLACK
;

296 
Ÿhî
->
cﬁ‹
 = 
RED
;

297 
roŸ
 = 
	`rb_rŸ©e_À·
(
Ÿhî
,Ñoot);

298 
Ÿhî
 = 
∑ª¡
->
À·
;

300 
Ÿhî
->
cﬁ‹
 = 
∑ª¡
->color;

301 
∑ª¡
->
cﬁ‹
 = 
BLACK
;

302 i‡(
Ÿhî
->
À·
)

304 
Ÿhî
->
À·
->
cﬁ‹
 = 
BLACK
;

306 
roŸ
 = 
	`rb_rŸ©e_right
(
∑ª¡
,Ñoot);

307 
node
 = 
roŸ
;

313 i‡(
node
)

315 
node
->
cﬁ‹
 = 
BLACK
;

318  
roŸ
;

319 
	}
}

321 
rb_node_t
* 
	$rb_£¨ch_auxûüry
(
key_t
 
key
, 
rb_node_t
* 
roŸ
,Ñb_node_t** 
ßve
)

323 
rb_node_t
 *
node
 = 
roŸ
, *
∑ª¡
 = 
NULL
;

324 
ªt
;

326 
node
)

328 
∑ª¡
 = 
node
;

329 
ªt
 = 
node
->
key
 - key;

330 i‡(0 < 
ªt
)

332 
node
 =Çode->
À·
;

334 i‡(0 > 
ªt
)

336 
node
 =Çode->
right
;

340  
node
;

344 i‡(
ßve
)

346 *
ßve
 = 
∑ª¡
;

349  
NULL
;

350 
	}
}

352 
rb_node_t
* 
	$rb_ö£π
(
key_t
 
key
, 
d©a_t
 
d©a
, 
rb_node_t
* 
roŸ
)

354 
rb_node_t
 *
∑ª¡
 = 
NULL
, *
node
;

356 
∑ª¡
 = 
NULL
;

357 i‡((
node
 = 
	`rb_£¨ch_auxûüry
(
key
, 
roŸ
, &
∑ª¡
)))

359  
roŸ
;

362 
node
 = 
	`rb_√w_node
(
key
, 
d©a
);

363 
node
->
∑ª¡
 =Öarent;

364 
node
->
À·
 =Çode->
right
 = 
NULL
;

365 
node
->
cﬁ‹
 = 
RED
;

367 i‡(
∑ª¡
)

369 i‡(
∑ª¡
->
key
 > key)

371 
∑ª¡
->
À·
 = 
node
;

375 
∑ª¡
->
right
 = 
node
;

380 
roŸ
 = 
node
;

383  
	`rb_ö£π_ªbÆ™˚
(
node
, 
roŸ
);

384 
	}
}

386 
rb_node_t
* 
	$rb_£¨ch
(
key_t
 
key
, 
rb_node_t
* 
roŸ
)

388  
	`rb_£¨ch_auxûüry
(
key
, 
roŸ
, 
NULL
);

389 
	}
}

391 
rb_node_t
* 
	$rb_îa£
(
key_t
 
key
, 
rb_node_t
 *
roŸ
)

393 
rb_node_t
 *
chûd
, *
∑ª¡
, *
ﬁd
, *
À·
, *
node
;

394 
cﬁ‹_t
 
cﬁ‹
;

396 i‡(!(
node
 = 
	`rb_£¨ch_auxûüry
(
key
, 
roŸ
, 
NULL
)))

398 
	`¥ötf
("key %d i†nŸÉxi°!\n", 
key
);

399  
roŸ
;

402 
ﬁd
 = 
node
;

404 i‡(
node
->
À·
 &&Çode->
right
)

406 
node
 =Çode->
right
;

407 (
À·
 = 
node
->À·Ë!
NULL
)

409 
node
 = 
À·
;

411 
chûd
 = 
node
->
right
;

412 
∑ª¡
 = 
node
->parent;

413 
cﬁ‹
 = 
node
->color;

415 i‡(
chûd
)

417 
chûd
->
∑ª¡
 =Öarent;

419 i‡(
∑ª¡
)

421 i‡(
∑ª¡
->
À·
 =
node
)

423 
∑ª¡
->
À·
 = 
chûd
;

427 
∑ª¡
->
right
 = 
chûd
;

432 
roŸ
 = 
chûd
;

435 i‡(
node
->
∑ª¡
 =
ﬁd
)

437 
∑ª¡
 = 
node
;

440 
node
->
∑ª¡
 = 
ﬁd
->parent;

441 
node
->
cﬁ‹
 = 
ﬁd
->color;

442 
node
->
right
 = 
ﬁd
->right;

443 
node
->
À·
 = 
ﬁd
->left;

445 i‡(
ﬁd
->
∑ª¡
)

447 i‡(
ﬁd
->
∑ª¡
->
À·
 == old)

449 
ﬁd
->
∑ª¡
->
À·
 = 
node
;

453 
ﬁd
->
∑ª¡
->
right
 = 
node
;

458 
roŸ
 = 
node
;

461 
ﬁd
->
À·
->
∑ª¡
 = 
node
;

462 i‡(
ﬁd
->
right
)

464 
ﬁd
->
right
->
∑ª¡
 = 
node
;

469 i‡(!
node
->
À·
)

471 
chûd
 = 
node
->
right
;

473 i‡(!
node
->
right
)

475 
chûd
 = 
node
->
À·
;

477 
∑ª¡
 = 
node
->parent;

478 
cﬁ‹
 = 
node
->color;

480 i‡(
chûd
)

482 
chûd
->
∑ª¡
 =Öarent;

484 i‡(
∑ª¡
)

486 i‡(
∑ª¡
->
À·
 =
node
)

488 
∑ª¡
->
À·
 = 
chûd
;

492 
∑ª¡
->
right
 = 
chûd
;

497 
roŸ
 = 
chûd
;

501 
	`‰ì
(
ﬁd
);

503 i‡(
cﬁ‹
 =
BLACK
)

505 
roŸ
 = 
	`rb_îa£_ªbÆ™˚
(
chûd
, 
∑ª¡
,Ñoot);

508  
roŸ
;

509 
	}
}

	@adi.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 
w_t
 *
	tW
;

6 
	sw_t
 {

7 
	mw
[30];

8 
	mc
;

9 
W
 
	ma
, 
	mb
;

12 
W
 
	$f1
(
w
)

13 *
w
;

15 
W
 
p
 = (WË
	`mÆloc
((
w_t
));

16 ()
	`°r˝y
(
p
->
w
, w);

17 
p
->
c
 = 1;

18 
p
->
a
 = 
NULL
;

19 
p
->
b
 = 
NULL
;

20 (
p
);

21 
	}
}

23 
	$f2
(
r
)

24 
W
 
r
;

26 i‡(
r
 = 
NULL
);

28 
	`f2
(
r
->
a
);

29 
	`¥ötf
("%†%d\n", 
r
->
w
,Ñ->
c
);

30 
	`f2
(
r
->
b
);

31 
	}
}

33 
	$f3
(
x
, 
y
)

34 
W
 *
x
;

35 *
y
;

37 if(*
x
 =
NULL
)

38 
x
 = 
	`f1
(
y
);

40 
c
 = 
	`°rcmp
(
y
, (*
x
)->
w
);

41 i‡(
c
 == 0)

42 (*
x
)->
c
++;

44 (
c
<0Ë? 
	`f3
 (&(*
x
)->
a
,
y
Ë: f3 (&(*x)->
b
,y);

46 
	}
}

48 
	$maö
()

50 
W
 
j
 = 
NULL
;

51 
	`f3
(&
j
, "toffee");

52 
	`f3
(&
j
, "bandit");

53 
	`f3
(&
j
, "cat");

54 
	`f3
(&
j
, "bandit");

55 
	`f2
(
j
);

57 
	}
}

	@array.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
d©a
[5] = {1, 2, 3, 4, 5};

13 
loˇl
, *
p1
, *
p2
;

15 
p1
 = &
d©a
[1];

16 
p2
 = &
d©a
[2];

17 
	`¥ötf
 ("p1 = %d,Ö2%d\n", 
p1
, 
p2
);

19 
	}
}

	@big.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
i
, 
n
, 
ma°
;

13 
d©a
[101];

14 
	`sˇnf
("%d", &
n
Ë!
EOF
){

15 
i
 = 0; i < 
n
; i++)

16 
	`sˇnf
("%d", 
d©a
+
i
);

18 
ma°
 = 
d©a
[0] * data[0];

19 
	`¥ötf
("%d\n", 
ma°
);

21 
	}
}

	@dul-link.c

8 
	~<°dio.h
>

9 
EÀmTy≥


	)

12 
	sDulNode
{

13 
EÀmTy≥
 
	md©a
;

14 
DulNode
 *
	m¥i‹
;

15 
DulNode
 *
	m√xt
;

16 } 
	tDulNode
, *
	tDuLökLi°
;

18 
	$InNode
()

19 
	$maö
()

22 
	}
}

	@enum.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
	edigô
 {
DNE
, 
TWO
, 
THREE
};

13 
	ecﬁ‹
 {
WHITE
=0, 
RED
=3, 
BLACK
};

14 
	`¥ötf
("%d, %d\n", 
THREE
, 
BLACK
);

17 
	}
}

	@er-wei-array.c

8 
	~<°dio.h
>

10 
	$maö
()

12 
a
[6][2] = {1, 2, 3, 4, 5, 6, 7, 8, 9};

13 *
p
 = 
a
[1];

14 (*
q
)[2] = &
a
[1];

15 
	`¥ötf
("%d, %d, %d\n", *++
p
, 
q
[0][0], q[1][2]);

18 
	}
}

	@jihe.c

8 
	~<°dio.h
>

10 
	snode
{

11 
	mx
;

12 
	my
;

13 
	mÊag
;

16 
	$maö
()

18 
i
, 
j
, 
n
;

19 
node
 
poöt
[1024];

20 
	`sˇnf
("%d", &
n
Ë!
EOF
){

21 
i
 = 0; i < 
n
; i++){

22 
	`sˇnf
("%d %d", &
poöt
[
i
].
x
, &poöt[i].
y
);

23 
poöt
[
i
].
Êag
 = 0;

29 
i
 = 0; i < 
n
; i++){

30 
j
 = 0; j < 
n
; j++){

31 if(
i
 !
j
){

32 if(
poöt
[
i
].
x
 <poöt[
j
].x &&Öoöt[i].
y
 <=Öoint[j].y)

33 
poöt
[
i
].
Êag
 = 1;

38 
i
 = 0; i < 
n
; i++){

39 if(
poöt
[
i
].
Êag
 == 0)

40 
	`¥ötf
("%d %d\n", 
poöt
[
i
].
x
,Öoöt[i].
y
);

44 
	}
}

	@linkqueue/linkqueue-link.c

1 
	~"queue.h
"

3 
	$maö
(
¨gc
, c⁄° * 
¨gv
[])

5 
LökQueue
 
queue
;

6 
	`puts
("ÂàùÂßãÂåñÈòüÂàó queue");

7 
	`öôQueue
(&
queue
);

8 
	`åavîßl
(
queue
);

10 
	`puts
("ÈòüÂ∞æ‰æùÊ¨°ÊèíÂÖ•0 1 2 3");

11 
	`ö£πQueue
(&
queue
, 0);

12 
	`ö£πQueue
(&
queue
, 1);

13 
	`ö£πQueue
(&
queue
, 2);

14 
	`ö£πQueue
(&
queue
, 3);

15 
	`åavîßl
(
queue
);

17 
	`puts
("ÂÖàËøõÂÖàÂá∫ÔºåÂà†Èô§ÈòüÂàó‰ªéÂ§¥ÂºÄÂßãÔºå 0 ");

18 
	`dñëeQueue
(&
queue
);

19 
	`åavîßl
(
queue
);

21 
	`puts
("ÂÖàËøõÂÖàÂá∫ÔºåÂà†Èô§ÈòüÂàó‰ªéÂ§¥ÂºÄÂßãÔºå 1 ");

22 
	`dñëeQueue
(&
queue
);

23 
	`åavîßl
(
queue
);

25 
	`puts
("ÂÖàËøõÂÖàÂá∫ÔºåÂà†Èô§ÈòüÂàó‰ªéÂ§¥ÂºÄÂßãÔºå 2 ");

26 
	`dñëeQueue
(&
queue
);

27 
	`åavîßl
(
queue
);

29 
	`puts
("ÂÖàËøõÂÖàÂá∫ÔºåÂà†Èô§ÈòüÂàó‰ªéÂ§¥ÂºÄÂßãÔºå 3");

30 
	`dñëeQueue
(&
queue
);

31 
	`åavîßl
(
queue
);

33 
	`de°‹yQueue
(&
queue
);

35 
	}
}

	@linkqueue/queue.h

1 #i‚de‡
queue_Hódî_h


2 
	#queue_Hódî_h


	)

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°dboﬁ.h
>

8 
	sNode
{

9 
	md©a
;

10 
Node
 *
	m√xt
;

11 } 
	tNode
, *
	tQueue
;

15 
Node
 *
	m‰⁄t
;

16 
Queue
 
	mª¨
;

17 } 
	tLökQueue
;

21 
	$öôQueue
(
LökQueue
 *
queue
)

24 
queue
->
‰⁄t
 = queue->
ª¨
 = (
Queue
)
	`mÆloc
((
Node
));

26 i‡(
NULL
 =
queue
->
‰⁄t
) {

27 
	`exô
(0);

30 
queue
->
‰⁄t
->
√xt
 = 
NULL
;

31 
	}
}

34 
boﬁ
 
	$isEm±y
(
LökQueue
 
queue
)

36  
queue
.
ª¨
 =queue.
‰⁄t
 ? 
åue
 : 
Ál£
;

37 
	}
}

40 
	$ö£πQueue
(
LökQueue
 *
queue
, 
ãmp
)

42 
Queue
 
q
 = (Queue)
	`mÆloc
((
Node
));

44 i‡(
NULL
 =
q
) {

45 
	`exô
(0);

48 
q
->
d©a
 = 
ãmp
;

49 
q
->
√xt
 = 
NULL
;

51 
queue
->
ª¨
->
√xt
 = 
q
;

52 
queue
->
ª¨
 = 
q
;

53 
	}
}

56 
	$dñëeQueue
(
LökQueue
 *
queue
)

58 
Queue
 
q
 = 
NULL
;

60 i‡(!
	`isEm±y
(*
queue
)) {

61 
q
 = 
queue
->
‰⁄t
->
√xt
;

62 
queue
->
‰⁄t
->
√xt
 = 
q
->next;

64 i‡(
queue
->
ª¨
 =
q
) {

65 
queue
->
ª¨
 = queue->
‰⁄t
;

68 
	`‰ì
(
q
);

70 
	}
}

73 
	$åavîßl
(
LökQueue
 
queue
)

75 
i
 = 1;

76 
Queue
 
q
 = 
queue
.
‰⁄t
->
√xt
;

78 
q
 !
NULL
) {

79 
	`¥ötf
("ÈòüÂàóÁ¨¨%d‰∏™ÂÖÉÁ¥†ÊòØÔºö%d\n", 
i
, 
q
->
d©a
);

80 
q
 = q->
√xt
;

81 
i
++;

83 
	}
}

86 
	$de°‹yQueue
(
LökQueue
 *
queue
)

88 
queue
->
‰⁄t
 !
NULL
) {

89 
queue
->
ª¨
 = queue->
‰⁄t
->
√xt
;

90 
	`‰ì
(
queue
->
‰⁄t
);

91 
queue
->
‰⁄t
 = queue->
ª¨
;

94 
	`puts
("ÈîÄÊØÅÊàêÂäüÔºÅ");

95 
	}
}

	@signed-unsigned.c

8 
	~<°dio.h
>

10 
	$maö
()

12 sig√d 
c1
 = -1;

13 
i1
 = ()
c1
;

15 
c2
 = -1;

16 
i2
 = ()
c2
;

18 
i3
 = ()(3 * 1.0 / 2 * 3);

19 
	`¥ötf
("%d, %d, %d\n", 
i1
, 
i2
, 
i3
);

22 
	}
}

	@single-LinkList.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	#EÀmTy≥
 

	)

12 
	sNode


14 
EÀmTy≥
 
	md©a
;

15 *
	m√xt
;

19 
	$maö
()

23 
	}
}

	@sizeof.c

8 
	~<°dio.h
>

10 
	$func
(
a
[]){

11 c⁄° * 
°r2
 = "hello";

12 
°r3
[] = "he";

13 
	`¥ötf
("%d, %d, %d, %d\n", (
a
), (
°r2
), (
°r3
),

15 
	}
}

17 
	$maö
()

19 
°r1
[8];

20 
	`func
(
°r1
);

22 
	}
}

	@stack/dyn_static.c

5 
	~"°ack.h
"

6 
	~<°dio.h
>

7 
	~<mÆloc.h
>

8 
	~<as£π.h
>

13 
STACK_TYPE
 *
	g°ack
;

14 
	g°ack_size
;

15 
	gt›_ñemít
 = -1;

18 
	$¸óã_°ack
(
size_t
 
size
)

20 
	`as£π
(
°ack_size
 == 0);

21 
°ack_size
 = 
size
;

22 
°ack
 = (
STACK_TYPE
 *)
	`mÆloc
(
°ack_size
 * (STACK_TYPE));

23 if(
°ack
 =
NULL
)

24 
	`≥º‹
("mallocÂàÜÈÖçÂ§±Ë¥•");

25 
	}
}

28 
	$de°roy_°ack
()

30 
	`as£π
(
°ack_size
 > 0);

31 
°ack_size
 = 0;

32 
	`‰ì
(
°ack
);

33 
°ack
 = 
NULL
;

34 
	}
}

37 
	$push
(
STACK_TYPE
 
vÆue
)

39 
	`as£π
(!
	`is_fuŒ
());

40 
t›_ñemít
 += 1;

41 
°ack
[
t›_ñemít
] = 
vÆue
;

42 
	}
}

45 
	$p›
()

47 
	`as£π
(!
	`is_em±y
());

48 
t›_ñemít
 -= 1;

49 
	}
}

52 
STACK_TYPE
 
	$t›
()

54 
	`as£π
(!
	`is_em±y
());

55  
°ack
[
t›_ñemít
];

56 
	}
}

59 
	$is_em±y
()

61 
	`as£π
(
°ack_size
 > 0);

62  
t›_ñemít
 == -1;

63 
	}
}

66 
	$is_fuŒ
()

68 
	`as£π
(
°ack_size
 > 0);

69  
t›_ñemít
 =
°ack_size
 - 1;

70 
	}
}

76 
	$¥öt
()

78 
i
;

79 
i
 = 
t›_ñemít
;

80 
	`¥ötf
("ÊâìÂç∞Âá∫Âä®ÊÄÅÊï∞ÁªÑÂ†ÜÊ†àÈáåÈù¢ÁöÑÂÄº: ");

81 if(
i
 == -1)

82 
	`¥ötf
("ËøôÊòØ‰∏™Á©∫Â†ÜÊ†à\n");

83 
i
!= -1)

84 
	`¥ötf
("%d ",
°ack
[
i
--]);

85 
	`¥ötf
("\n");

86 
	}
}

87 
	$maö
()

89 
	`¸óã_°ack
(50);

90 
	`¥öt
();

91 
	`push
(10);Öush(9);Öush(7);Öush(6);Öush(5);

92 
	`push
(4);Öush(3);Öush(2);Öush(1);Öush(0);

93 
	`¥ötf
("pushÂéãÂÖ•Êï∞ÂÄºÂêéÔºö\n");

94 
	`¥öt
();

95 
	`¥ötf
("\n");

96 
	`p›
();

97 
	`p›
();

98 
	`¥ötf
("ÁªèËøápopÂºπÂá∫Âá†‰∏™ÂÖÉÁ¥†ÂêéÁöÑÂ†ÜÊ†àÂÖÉÁ¥†:\n");

99 
	`¥öt
();

100 
	`¥ötf
("\n");

101 
	`¥ötf
("t›()Ë∞ÉÁî®Âá∫Êù•ÁöÑÂÄº: %d\n",
	`t›
());

102 
	`de°roy_°ack
();

104 
	}
}

	@stack/link_stack.c

4 
	~"°ack.h
"

5 
	~<°dio.h
>

6 
	~<mÆloc.h
>

7 
	~<as£π.h
>

9 
	#FALSE
 0

	)

14 
	sSTACK_NODE


16 
STACK_TYPE
 
	mvÆue
;

17 
STACK_NODE
 *
	m√xt
;

18 } 
	tSèckNode
;

21 
SèckNode
 *
	g°ack
;

24 
	$¸óã_°ack
(
size_t
 
size
)

25 {
	}
}

28 
	$de°roy_°ack
()

30 !
	`is_em±y
())

31 
	`p›
();

32 
	}
}

35 
	$push
(
STACK_TYPE
 
vÆue
)

37 
SèckNode
 *
√w_node
;

38 
√w_node
 = (
SèckNode
 *)
	`mÆloc
((StackNode));

39 if(
√w_node
 =
NULL
)

40 
	`≥º‹
("malloc fail");

41 
√w_node
->
vÆue
 = value;

42 
√w_node
->
√xt
 = 
°ack
;

43 
°ack
 = 
√w_node
;

44 
	}
}

47 
	$p›
()

49 
SèckNode
 *
fú°_node
;

51 
	`as£π
(!
	`is_em±y
());

52 
fú°_node
 = 
°ack
;

53 
°ack
 = 
fú°_node
->
√xt
;

54 
	`‰ì
(
fú°_node
);

55 
	}
}

58 
STACK_TYPE
 
	$t›
()

60 
	`as£π
(!
	`is_em±y
());

61  
°ack
->
vÆue
;

62 
	}
}

65 
	$is_em±y
()

67  
°ack
 =
NULL
;

68 
	}
}

71 
	$is_fuŒ
()

73  
FALSE
;

74 
	}
}

80 
	$¥öt
()

82 
SèckNode
 *
p_node
;

83 
p_node
 = 
°ack
;

84 
	`¥ötf
("ÊâìÂç∞Âá∫ÈìæÂºèÂ†ÜÊ†àÈáåÈù¢ÁöÑÂÄº: ");

85 if(
p_node
 =
NULL
)

86 
	`¥ötf
("Â†ÜÊ†à‰∏∫Á©∫\n");

87 
p_node
 !
NULL
)

89 
	`¥ötf
("%d ", 
p_node
->
vÆue
);

90 
p_node
 =Ö_node->
√xt
;

92 
	`¥ötf
("\n");

93 
	}
}

94 
	$maö
()

96 
	`¥öt
();

97 
	`push
(10);Öush(9);Öush(7);Öush(6);Öush(5);

98 
	`push
(4);Öush(3);Öush(2);Öush(1);Öush(0);

99 
	`¥ötf
("pushÂéãÂÖ•Êï∞ÂÄºÂêéÔºö\n");

100 
	`¥öt
();

101 
	`¥ötf
("\n");

102 
	`p›
();

103 
	`p›
();

104 
	`¥ötf
("ÁªèËøápopÂºπÂá∫Âá†‰∏™ÂÖÉÁ¥†ÂêéÁöÑÂ†ÜÊ†àÂÖÉÁ¥†:\n");

105 
	`¥öt
();

106 
	`¥ötf
("\n");

107 
	`¥ötf
("t›()Ë∞ÉÁî®Âá∫Êù•ÁöÑÂÄº: %d\n",
	`t›
());

108 
	`de°roy_°ack
();

110 
	}
}

	@stack/stack.h

4 
	~<°dlib.h
>

6 
	#STACK_TYPE
 

	)

13 
¸óã_°ack
(
size_t
 
size
);

20 
de°roy_°ack
();

26 
push
(
STACK_TYPE
 
vÆue
);

32 
p›
();

38 
STACK_TYPE
 
t›
();

44 
is_em±y
();

50 
is_fuŒ
();

	@stack/static_stack.c

6 
	~"°ack.h
"

7 
	~<as£π.h
>

8 
	~<°dio.h
>

10 
	#STACK_SIZE
 100

	)

15 
STACK_TYPE
 
	g°ack
[
STACK_SIZE
];

16 
	gt›_ñemít
 = -1;

19 
	$push
(
STACK_TYPE
 
vÆue
)

21 
	`as£π
(!
	`is_fuŒ
());

22 
t›_ñemít
 += 1;

23 
°ack
[
t›_ñemít
] = 
vÆue
;

24 
	}
}

27 
	$p›
()

29 
	`as£π
(!
	`is_em±y
());

30 
t›_ñemít
 -= 1;

31 
	}
}

34 
STACK_TYPE
 
	$t›
()

36 
	`as£π
(!
	`is_em±y
());

37  
°ack
[
t›_ñemít
];

38 
	}
}

41 
	$is_em±y
()

43  
t›_ñemít
 == -1;

44 
	}
}

47 
	$is_fuŒ
()

49  
t›_ñemít
 =
STACK_SIZE
 - 1;

50 
	}
}

55 
	$¥öt
()

57 
i
;

58 
i
 = 
t›_ñemít
;

59 
	`¥ötf
("ÊâìÂç∞Âá∫ÈùôÊÄÅÊï∞ÁªÑÂ†ÜÊ†àÈáåÈù¢ÁöÑÂÄº: ");

60 if(
i
 == -1)

61 
	`¥ötf
("ËøôÊòØ‰∏™Á©∫Â†ÜÊ†à\n");

62 
i
!= -1)

63 
	`¥ötf
("%d ",
°ack
[
i
--]);

64 
	`¥ötf
("\n");

65 
	}
}

66 
	$maö
()

68 
	`¥öt
();

69 
	`push
(10);Öush(9);Öush(7);Öush(6);Öush(5);

70 
	`push
(4);Öush(3);Öush(2);Öush(1);Öush(0);

71 
	`¥ötf
("pushÂéãÂÖ•Êï∞ÂÄºÂêéÔºö\n");

72 
	`¥öt
();

73 
	`¥ötf
("\n");

74 
	`p›
();

75 
	`p›
();

76 
	`¥ötf
("ÁªèËøápopÂºπÂá∫Âá†‰∏™ÂÖÉÁ¥†ÂêéÁöÑÂ†ÜÊ†àÂÖÉÁ¥†:\n");

77 
	`¥öt
();

78 
	`¥ötf
("\n");

79 
	`¥ötf
("t›()Ë∞ÉÁî®Âá∫Êù•ÁöÑÂÄº: %d\n",
	`t›
());

81 
	}
}

	@struct-bit.c

1 
	~<°dio.h
>

3 
	$maö
(){

4 
	sbs
{

5 
a
:1;

6 
b
:3;

7 
c
:4;

8 } 
bô
,*
pbô
;

10 
bô
.
a
=1;

11 
bô
.
b
=7;

12 
bô
.
c
=15;

13 
	`¥ötf
("%d,%d,%d\n",
bô
.
a
,bô.
b
,bô.
c
);

15 
pbô
=&
bô
;

16 
pbô
->
a
=0;

17 
pbô
->
b
&=3;

18 
pbô
->
c
|=1;

19 
	`¥ötf
("%d,%d,%d\n",
pbô
->
a
,pbô->
b
,pbô->
c
);

22 
	}
}

	@struct-func.c

8 
	~<°dio.h
>

10 
	ge
;

12 
	$func
(){

13 
	`¥ötf
("%d\n", 
e
);

14 
	}
}

16 
	$maö
()

19 
a
, 
b
;

20 }
t
 = {1};

21 
	`¥ötf
("%d\n", 
t
.
a
 /Å.
b
);

23 
b
;

24 
	`¥ötf
("%d\n", 
b
);

26 
c
;

27 
	`¥ötf
("%d\n", 
c
);

29 
	`func
();

32 
	}
}

	@struct.c

8 
	~<°dio.h
>

10 
	sµ


12 
	ma
;

13 
	mb
;

16 
	sªs


18 
µ
 
	mA
;

19 
µ
 
	mB
;

22 
	$maö
()

24 
µ
 
num
[5] = {1,2,3,4,5,6,7,8,9,0};

25 
i
;

27 
µ
 
⁄e
;

28 
⁄e
.
a
 = 1;

29 
⁄e
.
b
 = 2;

30 
ªs
 
two
;

31 
two
.
A
.
a
 = 11;

32 
two
.
B
.
b
 = 22;

34 
µ
 *
thªe
;

35 
thªe
 = &
⁄e
;

36 
thªe
->
a
 = 33;

37 
thªe
->
b
 = 44;

38 
	`¥ötf
 ("two.A.®%d,Åwo.B.b = %d\n", 
two
.
A
.
a
,Åwo.
B
.
b
);

39 
	`¥ötf
 ("t->®%d,t->b = %d\n", 
thªe
->
a
,Åhªe->
b
);

40 
	`¥ötf
 ("⁄e.®%d, o√.b = %d\n", 
⁄e
.
a
, o√.
b
);

41 
i
 = 0; i < 5; i++){

42 
	`¥ötf
 ("num[%d].®%d,Çum[%d].b = %d\n",
i
, 
num
[i].
a
, i,Çum[i].
b
);

45 
	}
}

	@union.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

4 
	uuni
 {

6 
	mn3
;

7 } 
	ms1
;

9 
	mn4
;

10 
	mn5
;

11 } 
	ms2
;

14 
	$maö
()

16 
uni
 
u
;

17 *
p
 = &
u
.
s2
.
n4
;

18 
	`mem£t
(&
u
, 0, (u));

19 
u
.
s1
.
n3
 = 1;

20 
u
.
s2
.
n4
 = 2;

21 
u
.
s2
.
n5
 = 3;

22 *
p
 = 4;

23 
	`¥ötf
("%d, %d, %d\n", 
u
.
s1
.
n3
, u.
s2
.
n4
, u.s2.
n5
);

25 
	}
}

	@
1
.
0
101
1434
ADI.c
C-Point/point.c
C/10.c
C/1001.c
C/13.c
C/14.c
C/15.c
C/166.c
C/167.c
C/168.c
C/169.c
C/170.c
C/171.c
C/172.2.c
C/172.c
C/173.c
C/18.c
C/20.c
C/9.c
C/C++/biggest-huiwen.cpp
C/C++/jinzhi.cpp
C/C++/ten-to-any.cpp
C/C++/ten-to-two.cpp
C/Double-linklist/DList.c
C/Double-linklist/DList.h
C/Double-linklist/Test.c
C/Double-linklist/doble-linklist.c
C/LinkList.c
C/LinkList2.c
C/a.c
C/b.c
C/base64.c
C/data2.c
C/del-same.c
C/dev/tq.c
C/erfenchazhao.c
C/example.c
C/feibonaqieshulie.c
C/feibonaqieshulie_2.c
C/fenkuaichazhao.c
C/gedebahe.c
C/guibingpaixu.c
C/hashchazhao.c
C/huawei/1.c
C/huawei/11.c
C/huawei/2-2.c
C/huawei/2.c
C/huawei/3.c
C/huawei/4-2.c
C/huawei/4.c
C/huawei/5-2.c
C/huawei/5.c
C/huawei/6.c
C/huawei/7.c
C/huawei/8-2.c
C/huawei/LinkList.c
C/huawei/a-b.c
C/huawei/bijiao-shuzu.c
C/huawei/del-same.c
C/huawei/huiwen.c
C/huawei/paixu.c
C/huawei/same.c
C/huawei/strx.c
C/huawei/yueshefuhuan.c
C/kuaishupaixu.c
C/light.c
C/maopao.c
C/movezones.c
C/nikeqieshi.c
C/pinduoduo/p1.c
C/pinduoduo/p3.c
C/scheduler_test.c
C/shunxunbiaocharu.c
C/test.cpp
C/testxier.c
C/tryhelloworld.c
C/xierpaixu.c
C/xuanzhepaixu.c
C/yueshefuhuan.c
C/zhiJieChaRu.c
C/Á∫¢ÈªëÊ†ë.c
adi.c
array.c
big.c
dul-link.c
enum.c
er-wei-array.c
jihe.c
linkqueue/linkqueue-link.c
linkqueue/queue.h
signed-unsigned.c
single-LinkList.c
sizeof.c
stack/dyn_static.c
stack/link_stack.c
stack/stack.h
stack/static_stack.c
struct-bit.c
struct-func.c
struct.c
union.c
